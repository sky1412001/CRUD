{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* istanbul ignore next */\n/**\n * A nifty little class that maintains event handlers to add a class to the container element\n * when entering \"mouse mode\" (on a `mousedown` event) and remove it when entering \"keyboard mode\"\n * (on a `tab` key `keydown` event).\n */\nvar InteractionModeEngine = /** @class */function () {\n  function InteractionModeEngine(container, className) {\n    var _this = this;\n    this.container = container;\n    this.className = className;\n    this.isRunning = false;\n    this.handleKeyDown = function (e) {\n      if (e.key === \"Tab\") {\n        _this.reset();\n        _this.container.addEventListener(\"mousedown\", _this.handleMouseDown);\n      }\n    };\n    this.handleMouseDown = function () {\n      _this.reset();\n      _this.container.classList.add(_this.className);\n      _this.container.addEventListener(\"keydown\", _this.handleKeyDown);\n    };\n  }\n  /** Returns whether the engine is currently running. */\n  InteractionModeEngine.prototype.isActive = function () {\n    return this.isRunning;\n  };\n  /** Enable behavior which applies the given className when in mouse mode. */\n  InteractionModeEngine.prototype.start = function () {\n    this.container.addEventListener(\"mousedown\", this.handleMouseDown);\n    this.isRunning = true;\n  };\n  /** Disable interaction mode behavior and remove className from container. */\n  InteractionModeEngine.prototype.stop = function () {\n    this.reset();\n    this.isRunning = false;\n  };\n  InteractionModeEngine.prototype.reset = function () {\n    this.container.classList.remove(this.className);\n    this.container.removeEventListener(\"keydown\", this.handleKeyDown);\n    this.container.removeEventListener(\"mousedown\", this.handleMouseDown);\n  };\n  return InteractionModeEngine;\n}();\nexport { InteractionModeEngine };","map":{"version":3,"names":["InteractionModeEngine","container","className","_this","isRunning","handleKeyDown","e","key","reset","addEventListener","handleMouseDown","classList","add","prototype","isActive","start","stop","remove","removeEventListener"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/common/interactionMode.ts"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* istanbul ignore next */\n\n/**\n * A nifty little class that maintains event handlers to add a class to the container element\n * when entering \"mouse mode\" (on a `mousedown` event) and remove it when entering \"keyboard mode\"\n * (on a `tab` key `keydown` event).\n */\nexport class InteractionModeEngine {\n    private isRunning = false;\n\n    constructor(private container: HTMLElement, private className: string) {}\n\n    /** Returns whether the engine is currently running. */\n    public isActive() {\n        return this.isRunning;\n    }\n\n    /** Enable behavior which applies the given className when in mouse mode. */\n    public start() {\n        this.container.addEventListener(\"mousedown\", this.handleMouseDown);\n        this.isRunning = true;\n    }\n\n    /** Disable interaction mode behavior and remove className from container. */\n    public stop() {\n        this.reset();\n        this.isRunning = false;\n    }\n\n    private reset() {\n        this.container.classList.remove(this.className);\n        this.container.removeEventListener(\"keydown\", this.handleKeyDown);\n        this.container.removeEventListener(\"mousedown\", this.handleMouseDown);\n    }\n\n    private handleKeyDown = (e: KeyboardEvent) => {\n        if (e.key === \"Tab\") {\n            this.reset();\n            this.container.addEventListener(\"mousedown\", this.handleMouseDown);\n        }\n    };\n\n    private handleMouseDown = () => {\n        this.reset();\n        this.container.classList.add(this.className);\n        this.container.addEventListener(\"keydown\", this.handleKeyDown);\n    };\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA;AAEA;;;;;AAKA,IAAAA,qBAAA;EAGI,SAAAA,sBAAoBC,SAAsB,EAAUC,SAAiB;IAArE,IAAAC,KAAA;IAAoB,KAAAF,SAAS,GAATA,SAAS;IAAuB,KAAAC,SAAS,GAATA,SAAS;IAFrD,KAAAE,SAAS,GAAG,KAAK;IA2BjB,KAAAC,aAAa,GAAG,UAACC,CAAgB;MACrC,IAAIA,CAAC,CAACC,GAAG,KAAK,KAAK,EAAE;QACjBJ,KAAI,CAACK,KAAK,EAAE;QACZL,KAAI,CAACF,SAAS,CAACQ,gBAAgB,CAAC,WAAW,EAAEN,KAAI,CAACO,eAAe,CAAC;;IAE1E,CAAC;IAEO,KAAAA,eAAe,GAAG;MACtBP,KAAI,CAACK,KAAK,EAAE;MACZL,KAAI,CAACF,SAAS,CAACU,SAAS,CAACC,GAAG,CAACT,KAAI,CAACD,SAAS,CAAC;MAC5CC,KAAI,CAACF,SAAS,CAACQ,gBAAgB,CAAC,SAAS,EAAEN,KAAI,CAACE,aAAa,CAAC;IAClE,CAAC;EApCuE;EAExE;EACOL,qBAAA,CAAAa,SAAA,CAAAC,QAAQ,GAAf;IACI,OAAO,IAAI,CAACV,SAAS;EACzB,CAAC;EAED;EACOJ,qBAAA,CAAAa,SAAA,CAAAE,KAAK,GAAZ;IACI,IAAI,CAACd,SAAS,CAACQ,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACC,eAAe,CAAC;IAClE,IAAI,CAACN,SAAS,GAAG,IAAI;EACzB,CAAC;EAED;EACOJ,qBAAA,CAAAa,SAAA,CAAAG,IAAI,GAAX;IACI,IAAI,CAACR,KAAK,EAAE;IACZ,IAAI,CAACJ,SAAS,GAAG,KAAK;EAC1B,CAAC;EAEOJ,qBAAA,CAAAa,SAAA,CAAAL,KAAK,GAAb;IACI,IAAI,CAACP,SAAS,CAACU,SAAS,CAACM,MAAM,CAAC,IAAI,CAACf,SAAS,CAAC;IAC/C,IAAI,CAACD,SAAS,CAACiB,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACb,aAAa,CAAC;IACjE,IAAI,CAACJ,SAAS,CAACiB,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAACR,eAAe,CAAC;EACzE,CAAC;EAcL,OAAAV,qBAAC;AAAD,CAAC,CAxCD"},"metadata":{},"sourceType":"module","externalDependencies":[]}