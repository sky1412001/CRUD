{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign } from \"tslib\";\nimport * as React from \"react\";\nimport { IconSize } from \"../../iconTypes\";\nimport { SVGIconContainer } from \"../../svgIconContainer\";\nexport var DoughnutChart = React.forwardRef(function (props, ref) {\n  var isLarge = props.size >= IconSize.LARGE;\n  var pixelGridSize = isLarge ? IconSize.LARGE : IconSize.STANDARD;\n  var translation = \"\".concat(-1 * pixelGridSize / 0.05 / 2);\n  return React.createElement(SVGIconContainer, __assign({\n    iconName: \"doughnut-chart\",\n    ref: ref\n  }, props), React.createElement(\"path\", {\n    d: isLarge ? \"M320 200C320 133.8 266.2 80 200 80S80 133.8 80 200S133.8 320 200 320V400C89.6 400 0 310.4 0 200C0 89.6 89.6 0 200 0S400 89.6 400 200H320zM318.2 220H399C389.6 314.4 314.4000000000001 389.6 220 399V318C270.2 309.6 309.8 270.2 318.2 220z\" : \"M237.2 180H318.2C309 252.2 252.2 309.6 180 318.6V237.2C208 230 229.8 208 237.2 180zM240 160C240 115.8 204.2 80 160 80S80 115.8 80 160C80 204.2 115.8 240 160 240V320C71.6 320 0 248.4 0 160S71.6 0 160 0S320 71.6 320 160H240z\",\n    fillRule: \"evenodd\",\n    \"transform-origin\": \"center\",\n    transform: \"scale(0.05, -0.05) translate(\".concat(translation, \", \").concat(translation, \")\")\n  }));\n});\nDoughnutChart.defaultProps = {\n  size: IconSize.STANDARD\n};\nDoughnutChart.displayName = \"Blueprint5.Icon.DoughnutChart\";\nexport default DoughnutChart;","map":{"version":3,"names":["React","IconSize","SVGIconContainer","DoughnutChart","forwardRef","props","ref","isLarge","size","LARGE","pixelGridSize","STANDARD","translation","concat","createElement","__assign","iconName","d","fillRule","transform","defaultProps","displayName"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/icons/src/generated/components/doughnut-chart.tsx"],"sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport type { SVGIconProps } from \"../../svgIconProps\";\nimport { IconSize } from \"../../iconTypes\";\nimport { SVGIconContainer } from \"../../svgIconContainer\";\n\nexport const DoughnutChart: React.FC<SVGIconProps> = React.forwardRef<any, SVGIconProps>((props, ref) => {\n    const isLarge = props.size! >= IconSize.LARGE;\n    const pixelGridSize = isLarge ? IconSize.LARGE : IconSize.STANDARD;\n    const translation = `${-1 * pixelGridSize / 0.05 / 2}`;\n    return (\n        <SVGIconContainer iconName=\"doughnut-chart\" ref={ref}  {...props}>\n            <path\n                d={isLarge ? \"M320 200C320 133.8 266.2 80 200 80S80 133.8 80 200S133.8 320 200 320V400C89.6 400 0 310.4 0 200C0 89.6 89.6 0 200 0S400 89.6 400 200H320zM318.2 220H399C389.6 314.4 314.4000000000001 389.6 220 399V318C270.2 309.6 309.8 270.2 318.2 220z\" : \"M237.2 180H318.2C309 252.2 252.2 309.6 180 318.6V237.2C208 230 229.8 208 237.2 180zM240 160C240 115.8 204.2 80 160 80S80 115.8 80 160C80 204.2 115.8 240 160 240V320C71.6 320 0 248.4 0 160S71.6 0 160 0S320 71.6 320 160H240z\"}\n                fillRule=\"evenodd\"\n                transform-origin=\"center\"\n                transform={`scale(0.05, -0.05) translate(${translation}, ${translation})`}\n            />\n        </SVGIconContainer>\n   )\n});\nDoughnutChart.defaultProps = {\n    size: IconSize.STANDARD,\n};\nDoughnutChart.displayName = `Blueprint5.Icon.DoughnutChart`;\nexport default DoughnutChart;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAeA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,gBAAgB,QAAQ,wBAAwB;AAEzD,OAAO,IAAMC,aAAa,GAA2BH,KAAK,CAACI,UAAU,CAAoB,UAACC,KAAK,EAAEC,GAAG;EAChG,IAAMC,OAAO,GAAGF,KAAK,CAACG,IAAK,IAAIP,QAAQ,CAACQ,KAAK;EAC7C,IAAMC,aAAa,GAAGH,OAAO,GAAGN,QAAQ,CAACQ,KAAK,GAAGR,QAAQ,CAACU,QAAQ;EAClE,IAAMC,WAAW,GAAG,GAAAC,MAAA,CAAG,CAAC,CAAC,GAAGH,aAAa,GAAG,IAAI,GAAG,CAAC,CAAE;EACtD,OACIV,KAAA,CAAAc,aAAA,CAACZ,gBAAgB,EAAAa,QAAA;IAACC,QAAQ,EAAC,gBAAgB;IAACV,GAAG,EAAEA;EAAG,GAAOD,KAAK,GAC5DL,KAAA,CAAAc,aAAA;IACIG,CAAC,EAAEV,OAAO,GAAG,4OAA4O,GAAG,gOAAgO;IAC5dW,QAAQ,EAAC,SAAS;IAAA,oBACD,QAAQ;IACzBC,SAAS,EAAE,gCAAAN,MAAA,CAAgCD,WAAW,QAAAC,MAAA,CAAKD,WAAW;EAAG,EAC3E,CACa;AAE3B,CAAC,CAAC;AACFT,aAAa,CAACiB,YAAY,GAAG;EACzBZ,IAAI,EAAEP,QAAQ,CAACU;CAClB;AACDR,aAAa,CAACkB,WAAW,GAAG,+BAA+B;AAC3D,eAAelB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}