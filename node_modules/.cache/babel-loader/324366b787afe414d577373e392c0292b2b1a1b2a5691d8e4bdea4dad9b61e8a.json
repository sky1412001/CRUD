{"ast":null,"code":"/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __awaiter, __generator } from \"tslib\";\nimport { pascalCase } from \"change-case\";\nimport { IconSize } from \"../iconTypes\";\n/**\n * A dynamic loader for icon paths that generates separate chunks for the two size variants.\n */\nexport var splitPathsBySizeLoader = function (name, size) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var key, pathsRecord;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          key = pascalCase(name);\n          if (!(size === IconSize.STANDARD)) return [3 /*break*/, 2];\n          return [4 /*yield*/, import( /* webpackChunkName: \"blueprint-icons-16px-paths\" */\n          \"../generated/16px/paths\")];\n        case 1:\n          pathsRecord = _a.sent();\n          return [3 /*break*/, 4];\n        case 2:\n          return [4 /*yield*/, import( /* webpackChunkName: \"blueprint-icons-20px-paths\" */\n          \"../generated/20px/paths\")];\n        case 3:\n          pathsRecord = _a.sent();\n          _a.label = 4;\n        case 4:\n          return [2 /*return*/, pathsRecord[key]];\n      }\n    });\n  });\n};","map":{"version":3,"names":["pascalCase","IconSize","splitPathsBySizeLoader","name","size","__awaiter","key","STANDARD","pathsRecord","_a","sent"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/icons/src/paths-loaders/splitPathsBySizeLoader.ts"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { pascalCase } from \"change-case\";\n\nimport type { IconPathsLoader } from \"../iconLoader\";\nimport { IconName } from \"../iconNames\";\nimport { IconPaths, IconSize } from \"../iconTypes\";\nimport type { PascalCase } from \"../type-utils\";\n\n/**\n * A dynamic loader for icon paths that generates separate chunks for the two size variants.\n */\nexport const splitPathsBySizeLoader: IconPathsLoader = async (name, size) => {\n    const key = pascalCase(name) as PascalCase<IconName>;\n    let pathsRecord: Record<PascalCase<IconName>, IconPaths>;\n\n    if (size === IconSize.STANDARD) {\n        pathsRecord = await import(\n            /* webpackChunkName: \"blueprint-icons-16px-paths\" */\n            \"../generated/16px/paths\"\n        );\n    } else {\n        pathsRecord = await import(\n            /* webpackChunkName: \"blueprint-icons-20px-paths\" */\n            \"../generated/20px/paths\"\n        );\n    }\n\n    return pathsRecord[key];\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAASA,UAAU,QAAQ,aAAa;AAIxC,SAAoBC,QAAQ,QAAQ,cAAc;AAGlD;;;AAGA,OAAO,IAAMC,sBAAsB,GAAoB,SAAAA,CAAOC,IAAI,EAAEC,IAAI;EAAA,OAAAC,SAAA;;;;;UAC9DC,GAAG,GAAGN,UAAU,CAACG,IAAI,CAAyB;gBAGhDC,IAAI,KAAKH,QAAQ,CAACM,QAAQ,GAA1B;UACc,qBAAM,MAAM,EACtB;UACA,yBAAyB,CAC5B;;UAHDC,WAAW,GAAGC,EAAA,CAAAC,IAAA,EAGb;;;UAEa,qBAAM,MAAM,EACtB;UACA,yBAAyB,CAC5B;;UAHDF,WAAW,GAAGC,EAAA,CAAAC,IAAA,EAGb;;;UAGL,sBAAOF,WAAW,CAACF,GAAG,CAAC;;;;CAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}