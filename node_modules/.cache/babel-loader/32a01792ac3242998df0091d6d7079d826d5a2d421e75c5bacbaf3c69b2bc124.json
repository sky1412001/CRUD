{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\n/**\n * @fileoverview This component is DEPRECATED, and the code is frozen.\n * All changes & bugfixes should be made to ContextMenu2 instead.\n */\n/* eslint-disable deprecation/deprecation */\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { AbstractPureComponent, Classes } from \"../common\";\nimport { Popover } from \"../components/popover/popover\";\nvar TRANSITION_DURATION = 100;\n/* istanbul ignore next */\n/** @deprecated use ContextMenu */\nvar ContextMenuLegacy = /** @class */function (_super) {\n  __extends(ContextMenuLegacy, _super);\n  function ContextMenuLegacy() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = {\n      isDarkTheme: false,\n      isOpen: false\n    };\n    _this.cancelContextMenu = function (e) {\n      return e.preventDefault();\n    };\n    _this.handleBackdropContextMenu = function (e) {\n      // React function to remove from the event pool, useful when using a event within a callback\n      e.persist();\n      e.preventDefault();\n      // wait for backdrop to disappear so we can find the \"real\" element at event coordinates.\n      // timeout duration is equivalent to transition duration so we know it's animated out.\n      _this.setTimeout(function () {\n        // retrigger context menu event at the element beneath the backdrop.\n        // if it has a `contextmenu` event handler then it'll be invoked.\n        // if it doesn't, no native menu will show (at least on OSX) :(\n        var newTarget = document.elementFromPoint(e.clientX, e.clientY);\n        var view = e.view,\n          newEventInit = __rest(e, [\"view\"]);\n        newTarget === null || newTarget === void 0 ? void 0 : newTarget.dispatchEvent(new MouseEvent(\"contextmenu\", newEventInit));\n      }, TRANSITION_DURATION);\n    };\n    _this.handlePopoverInteraction = function (nextOpenState) {\n      if (!nextOpenState) {\n        // delay the actual hiding till the event queue clears\n        // to avoid flicker of opening twice\n        _this.requestAnimationFrame(function () {\n          return _this.hide();\n        });\n      }\n    };\n    return _this;\n  }\n  ContextMenuLegacy.prototype.render = function () {\n    var _a;\n    // prevent right-clicking in a context menu\n    var content = React.createElement(\"div\", {\n      onContextMenu: this.cancelContextMenu\n    }, this.state.menu);\n    var popoverClassName = classNames((_a = {}, _a[Classes.DARK] = this.state.isDarkTheme, _a));\n    // HACKHACK: workaround until we have access to Popper#scheduleUpdate().\n    // https://github.com/palantir/blueprint/issues/692\n    // Generate key based on offset so a new Popover instance is created\n    // when offset changes, to force recomputing position.\n    var key = this.state.offset === undefined ? \"\" : \"\".concat(this.state.offset.left, \"x\").concat(this.state.offset.top);\n    // wrap the popover in a positioned div to make sure it is properly\n    // offset on the screen.\n    return React.createElement(\"div\", {\n      className: Classes.CONTEXT_MENU,\n      style: this.state.offset\n    }, React.createElement(Popover, __assign({}, this.props, {\n      backdropProps: {\n        onContextMenu: this.handleBackdropContextMenu\n      },\n      content: content,\n      enforceFocus: false,\n      key: key,\n      hasBackdrop: true,\n      isOpen: this.state.isOpen,\n      minimal: true,\n      rootBoundary: \"viewport\",\n      onInteraction: this.handlePopoverInteraction,\n      placement: \"right-start\",\n      popoverClassName: popoverClassName,\n      transitionDuration: TRANSITION_DURATION\n    }), React.createElement(\"div\", null)));\n  };\n  ContextMenuLegacy.prototype.show = function (menu, offset, onClose, isDarkTheme) {\n    if (isDarkTheme === void 0) {\n      isDarkTheme = false;\n    }\n    this.setState({\n      isOpen: true,\n      menu: menu,\n      offset: offset,\n      onClose: onClose,\n      isDarkTheme: isDarkTheme\n    });\n  };\n  ContextMenuLegacy.prototype.hide = function () {\n    var _a, _b;\n    (_b = (_a = this.state).onClose) === null || _b === void 0 ? void 0 : _b.call(_a);\n    this.setState({\n      isOpen: false,\n      onClose: undefined\n    });\n  };\n  return ContextMenuLegacy;\n}(AbstractPureComponent);\nvar contextMenuElement;\nvar contextMenu;\n/**\n * Show the given menu element at the given offset from the top-left corner of the viewport.\n * The menu will appear below-right of this point and will flip to below-left if there is not enough\n * room onscreen. The optional callback will be invoked when this menu closes.\n *\n * @deprecated use ContextMenu2\n */\nexport function show(menu, offset, onClose, isDarkTheme) {\n  if (contextMenuElement === undefined) {\n    contextMenuElement = document.createElement(\"div\");\n    contextMenuElement.classList.add(Classes.CONTEXT_MENU);\n    document.body.appendChild(contextMenuElement);\n    contextMenu = ReactDOM.render(React.createElement(ContextMenuLegacy, {\n      onClosed: remove\n    }), contextMenuElement);\n  }\n  contextMenu.show(menu, offset, onClose, isDarkTheme);\n}\n/** Hide the open context menu. */\nexport function hide() {\n  contextMenu === null || contextMenu === void 0 ? void 0 : contextMenu.hide();\n}\n/** Return whether a context menu is currently open. */\nexport function isOpen() {\n  return contextMenu != null && contextMenu.state.isOpen;\n}\nfunction remove() {\n  if (contextMenuElement != null) {\n    ReactDOM.unmountComponentAtNode(contextMenuElement);\n    contextMenuElement.remove();\n    contextMenuElement = undefined;\n    contextMenu = undefined;\n  }\n}","map":{"version":3,"names":["classNames","React","ReactDOM","AbstractPureComponent","Classes","Popover","TRANSITION_DURATION","ContextMenuLegacy","_super","__extends","_this","apply","arguments","state","isDarkTheme","isOpen","cancelContextMenu","e","preventDefault","handleBackdropContextMenu","persist","setTimeout","newTarget","document","elementFromPoint","clientX","clientY","view","newEventInit","__rest","dispatchEvent","MouseEvent","handlePopoverInteraction","nextOpenState","requestAnimationFrame","hide","prototype","render","content","createElement","onContextMenu","menu","popoverClassName","_a","DARK","key","offset","undefined","concat","left","top","className","CONTEXT_MENU","style","__assign","props","backdropProps","enforceFocus","hasBackdrop","minimal","rootBoundary","onInteraction","placement","transitionDuration","show","onClose","setState","_b","call","contextMenuElement","contextMenu","classList","add","body","appendChild","onClosed","remove","unmountComponentAtNode"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/legacy/contextMenuLegacy.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This component is DEPRECATED, and the code is frozen.\n * All changes & bugfixes should be made to ContextMenu2 instead.\n */\n\n/* eslint-disable deprecation/deprecation */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { AbstractPureComponent, Classes } from \"../common\";\nimport { OverlayLifecycleProps } from \"../components/overlay/overlay\";\nimport { Popover } from \"../components/popover/popover\";\n\nexport interface Offset {\n    left: number;\n    top: number;\n}\n\ninterface ContextMenuLegacyState {\n    isOpen: boolean;\n    isDarkTheme: boolean;\n    menu?: JSX.Element;\n    offset?: Offset;\n    onClose?: () => void;\n}\n\nconst TRANSITION_DURATION = 100;\n\ntype ContextMenuLegacyProps = OverlayLifecycleProps;\n\n/* istanbul ignore next */\n/** @deprecated use ContextMenu */\nclass ContextMenuLegacy extends AbstractPureComponent<ContextMenuLegacyProps, ContextMenuLegacyState> {\n    public state: ContextMenuLegacyState = {\n        isDarkTheme: false,\n        isOpen: false,\n    };\n\n    public render() {\n        // prevent right-clicking in a context menu\n        const content = <div onContextMenu={this.cancelContextMenu}>{this.state.menu}</div>;\n        const popoverClassName = classNames({ [Classes.DARK]: this.state.isDarkTheme });\n\n        // HACKHACK: workaround until we have access to Popper#scheduleUpdate().\n        // https://github.com/palantir/blueprint/issues/692\n        // Generate key based on offset so a new Popover instance is created\n        // when offset changes, to force recomputing position.\n        const key = this.state.offset === undefined ? \"\" : `${this.state.offset.left}x${this.state.offset.top}`;\n\n        // wrap the popover in a positioned div to make sure it is properly\n        // offset on the screen.\n        return (\n            <div className={Classes.CONTEXT_MENU} style={this.state.offset}>\n                <Popover\n                    {...this.props}\n                    backdropProps={{ onContextMenu: this.handleBackdropContextMenu }}\n                    content={content}\n                    enforceFocus={false}\n                    key={key}\n                    hasBackdrop={true}\n                    isOpen={this.state.isOpen}\n                    minimal={true}\n                    rootBoundary=\"viewport\"\n                    onInteraction={this.handlePopoverInteraction}\n                    placement=\"right-start\"\n                    popoverClassName={popoverClassName}\n                    transitionDuration={TRANSITION_DURATION}\n                >\n                    <div />\n                </Popover>\n            </div>\n        );\n    }\n\n    public show(menu: JSX.Element, offset: Offset, onClose?: () => void, isDarkTheme = false) {\n        this.setState({ isOpen: true, menu, offset, onClose, isDarkTheme });\n    }\n\n    public hide() {\n        this.state.onClose?.();\n        this.setState({ isOpen: false, onClose: undefined });\n    }\n\n    private cancelContextMenu = (e: React.SyntheticEvent<HTMLDivElement>) => e.preventDefault();\n\n    private handleBackdropContextMenu = (e: React.MouseEvent<HTMLDivElement>) => {\n        // React function to remove from the event pool, useful when using a event within a callback\n        e.persist();\n        e.preventDefault();\n        // wait for backdrop to disappear so we can find the \"real\" element at event coordinates.\n        // timeout duration is equivalent to transition duration so we know it's animated out.\n        this.setTimeout(() => {\n            // retrigger context menu event at the element beneath the backdrop.\n            // if it has a `contextmenu` event handler then it'll be invoked.\n            // if it doesn't, no native menu will show (at least on OSX) :(\n            const newTarget = document.elementFromPoint(e.clientX, e.clientY);\n            const { view, ...newEventInit } = e;\n            newTarget?.dispatchEvent(new MouseEvent(\"contextmenu\", newEventInit));\n        }, TRANSITION_DURATION);\n    };\n\n    private handlePopoverInteraction = (nextOpenState: boolean) => {\n        if (!nextOpenState) {\n            // delay the actual hiding till the event queue clears\n            // to avoid flicker of opening twice\n            this.requestAnimationFrame(() => this.hide());\n        }\n    };\n}\n\nlet contextMenuElement: HTMLElement | undefined;\nlet contextMenu: ContextMenuLegacy | undefined;\n\n/**\n * Show the given menu element at the given offset from the top-left corner of the viewport.\n * The menu will appear below-right of this point and will flip to below-left if there is not enough\n * room onscreen. The optional callback will be invoked when this menu closes.\n *\n * @deprecated use ContextMenu2\n */\nexport function show(menu: JSX.Element, offset: Offset, onClose?: () => void, isDarkTheme?: boolean) {\n    if (contextMenuElement === undefined) {\n        contextMenuElement = document.createElement(\"div\");\n        contextMenuElement.classList.add(Classes.CONTEXT_MENU);\n        document.body.appendChild(contextMenuElement);\n        contextMenu = ReactDOM.render<ContextMenuLegacyProps>(\n            <ContextMenuLegacy onClosed={remove} />,\n            contextMenuElement,\n        ) as ContextMenuLegacy;\n    }\n\n    contextMenu!.show(menu, offset, onClose, isDarkTheme);\n}\n\n/** Hide the open context menu. */\nexport function hide() {\n    contextMenu?.hide();\n}\n\n/** Return whether a context menu is currently open. */\nexport function isOpen() {\n    return contextMenu != null && contextMenu.state.isOpen;\n}\n\nfunction remove() {\n    if (contextMenuElement != null) {\n        ReactDOM.unmountComponentAtNode(contextMenuElement);\n        contextMenuElement.remove();\n        contextMenuElement = undefined;\n        contextMenu = undefined;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}