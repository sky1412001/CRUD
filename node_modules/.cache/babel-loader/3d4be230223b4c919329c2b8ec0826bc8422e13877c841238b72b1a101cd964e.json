{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __spreadArray } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { AbstractPureComponent, Classes, Position } from \"../../common\";\nimport { TOASTER_CREATE_NULL, TOASTER_MAX_TOASTS_INVALID, TOASTER_WARN_INLINE } from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { isNodeEnv } from \"../../common/utils\";\nimport { Overlay } from \"../overlay/overlay\";\nimport { Toast } from \"./toast\";\n/**\n * OverlayToaster component.\n *\n * @see https://blueprintjs.com/docs/#core/components/toast\n */\nvar OverlayToaster = /** @class */function (_super) {\n  __extends(OverlayToaster, _super);\n  function OverlayToaster() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = {\n      toasts: []\n    };\n    // auto-incrementing identifier for un-keyed toasts\n    _this.toastId = 0;\n    _this.renderToast = function (toast) {\n      return React.createElement(Toast, __assign({}, toast, {\n        onDismiss: _this.getDismissHandler(toast)\n      }));\n    };\n    _this.getDismissHandler = function (toast) {\n      return function (timeoutExpired) {\n        _this.dismiss(toast.key, timeoutExpired);\n      };\n    };\n    _this.handleClose = function (e) {\n      // NOTE that `e` isn't always a KeyboardEvent but that's the only type we care about\n      if (e.key === \"Escape\") {\n        _this.clear();\n      }\n    };\n    return _this;\n  }\n  /**\n   * Create a new `Toaster` instance that can be shared around your application.\n   * The `Toaster` will be rendered into a new element appended to the given container.\n   */\n  OverlayToaster.create = function (props, container) {\n    if (container === void 0) {\n      container = document.body;\n    }\n    if (props != null && props.usePortal != null && !isNodeEnv(\"production\")) {\n      console.warn(TOASTER_WARN_INLINE);\n    }\n    var containerElement = document.createElement(\"div\");\n    container.appendChild(containerElement);\n    var toaster = ReactDOM.render(React.createElement(OverlayToaster, __assign({}, props, {\n      usePortal: false\n    })), containerElement);\n    if (toaster == null) {\n      throw new Error(TOASTER_CREATE_NULL);\n    }\n    return toaster;\n  };\n  OverlayToaster.prototype.show = function (props, key) {\n    if (this.props.maxToasts) {\n      // check if active number of toasts are at the maxToasts limit\n      this.dismissIfAtLimit();\n    }\n    var options = this.createToastOptions(props, key);\n    if (key === undefined || this.isNewToastKey(key)) {\n      this.setState(function (prevState) {\n        return {\n          toasts: __spreadArray([options], prevState.toasts, true)\n        };\n      });\n    } else {\n      this.setState(function (prevState) {\n        return {\n          toasts: prevState.toasts.map(function (t) {\n            return t.key === key ? options : t;\n          })\n        };\n      });\n    }\n    return options.key;\n  };\n  OverlayToaster.prototype.dismiss = function (key, timeoutExpired) {\n    if (timeoutExpired === void 0) {\n      timeoutExpired = false;\n    }\n    this.setState(function (_a) {\n      var toasts = _a.toasts;\n      return {\n        toasts: toasts.filter(function (t) {\n          var _a;\n          var matchesKey = t.key === key;\n          if (matchesKey) {\n            (_a = t.onDismiss) === null || _a === void 0 ? void 0 : _a.call(t, timeoutExpired);\n          }\n          return !matchesKey;\n        })\n      };\n    });\n  };\n  OverlayToaster.prototype.clear = function () {\n    this.state.toasts.forEach(function (t) {\n      var _a;\n      return (_a = t.onDismiss) === null || _a === void 0 ? void 0 : _a.call(t, false);\n    });\n    this.setState({\n      toasts: []\n    });\n  };\n  OverlayToaster.prototype.getToasts = function () {\n    return this.state.toasts;\n  };\n  OverlayToaster.prototype.render = function () {\n    var classes = classNames(Classes.TOAST_CONTAINER, this.getPositionClasses(), this.props.className);\n    return React.createElement(Overlay, {\n      autoFocus: this.props.autoFocus,\n      canEscapeKeyClose: this.props.canEscapeKeyClear,\n      canOutsideClickClose: false,\n      className: classes,\n      enforceFocus: false,\n      hasBackdrop: false,\n      isOpen: this.state.toasts.length > 0 || this.props.children != null,\n      onClose: this.handleClose,\n      shouldReturnFocusOnClose: false,\n      // $pt-transition-duration * 3 + $pt-transition-duration / 2\n      transitionDuration: 350,\n      transitionName: Classes.TOAST,\n      usePortal: this.props.usePortal\n    }, this.state.toasts.map(this.renderToast, this), this.props.children);\n  };\n  OverlayToaster.prototype.validateProps = function (_a) {\n    var maxToasts = _a.maxToasts;\n    // maximum number of toasts should not be a number less than 1\n    if (maxToasts !== undefined && maxToasts < 1) {\n      throw new Error(TOASTER_MAX_TOASTS_INVALID);\n    }\n  };\n  OverlayToaster.prototype.isNewToastKey = function (key) {\n    return this.state.toasts.every(function (toast) {\n      return toast.key !== key;\n    });\n  };\n  OverlayToaster.prototype.dismissIfAtLimit = function () {\n    if (this.state.toasts.length === this.props.maxToasts) {\n      // dismiss the oldest toast to stay within the maxToasts limit\n      this.dismiss(this.state.toasts[this.state.toasts.length - 1].key);\n    }\n  };\n  OverlayToaster.prototype.createToastOptions = function (props, key) {\n    if (key === void 0) {\n      key = \"toast-\".concat(this.toastId++);\n    }\n    // clone the object before adding the key prop to avoid leaking the mutation\n    return __assign(__assign({}, props), {\n      key: key\n    });\n  };\n  OverlayToaster.prototype.getPositionClasses = function () {\n    var positions = this.props.position.split(\"-\");\n    // NOTE that there is no -center class because that's the default style\n    return __spreadArray(__spreadArray([], positions.map(function (p) {\n      return \"\".concat(Classes.TOAST_CONTAINER, \"-\").concat(p.toLowerCase());\n    }), true), [\"\".concat(Classes.TOAST_CONTAINER, \"-\").concat(this.props.usePortal ? \"in-portal\" : \"inline\")], false);\n  };\n  OverlayToaster.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".OverlayToaster\");\n  OverlayToaster.defaultProps = {\n    autoFocus: false,\n    canEscapeKeyClear: true,\n    position: Position.TOP,\n    usePortal: true\n  };\n  return OverlayToaster;\n}(AbstractPureComponent);\nexport { OverlayToaster };","map":{"version":3,"names":["classNames","React","ReactDOM","AbstractPureComponent","Classes","Position","TOASTER_CREATE_NULL","TOASTER_MAX_TOASTS_INVALID","TOASTER_WARN_INLINE","DISPLAYNAME_PREFIX","isNodeEnv","Overlay","Toast","OverlayToaster","_super","__extends","_this","apply","arguments","state","toasts","toastId","renderToast","toast","createElement","__assign","onDismiss","getDismissHandler","timeoutExpired","dismiss","key","handleClose","e","clear","create","props","container","document","body","usePortal","console","warn","containerElement","appendChild","toaster","render","Error","prototype","show","maxToasts","dismissIfAtLimit","options","createToastOptions","undefined","isNewToastKey","setState","prevState","__spreadArray","map","t","_a","filter","matchesKey","call","forEach","getToasts","classes","TOAST_CONTAINER","getPositionClasses","className","autoFocus","canEscapeKeyClose","canEscapeKeyClear","canOutsideClickClose","enforceFocus","hasBackdrop","isOpen","length","children","onClose","shouldReturnFocusOnClose","transitionDuration","transitionName","TOAST","validateProps","every","concat","positions","position","split","p","toLowerCase","displayName","defaultProps","TOP"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/components/toast/overlayToaster.tsx"],"sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { AbstractPureComponent, Classes, Position } from \"../../common\";\nimport { TOASTER_CREATE_NULL, TOASTER_MAX_TOASTS_INVALID, TOASTER_WARN_INLINE } from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { isNodeEnv } from \"../../common/utils\";\nimport { Overlay } from \"../overlay/overlay\";\nimport type { OverlayToasterProps } from \"./overlayToasterProps\";\nimport { Toast, ToastProps } from \"./toast\";\nimport type { Toaster, ToastOptions } from \"./toaster\";\n\nexport interface OverlayToasterState {\n    toasts: ToastOptions[];\n}\n\n/**\n * OverlayToaster component.\n *\n * @see https://blueprintjs.com/docs/#core/components/toast\n */\nexport class OverlayToaster extends AbstractPureComponent<OverlayToasterProps, OverlayToasterState> implements Toaster {\n    public static displayName = `${DISPLAYNAME_PREFIX}.OverlayToaster`;\n\n    public static defaultProps: OverlayToasterProps = {\n        autoFocus: false,\n        canEscapeKeyClear: true,\n        position: Position.TOP,\n        usePortal: true,\n    };\n\n    /**\n     * Create a new `Toaster` instance that can be shared around your application.\n     * The `Toaster` will be rendered into a new element appended to the given container.\n     */\n    public static create(props?: OverlayToasterProps, container = document.body): Toaster {\n        if (props != null && props.usePortal != null && !isNodeEnv(\"production\")) {\n            console.warn(TOASTER_WARN_INLINE);\n        }\n        const containerElement = document.createElement(\"div\");\n        container.appendChild(containerElement);\n        const toaster = ReactDOM.render<OverlayToasterProps>(\n            <OverlayToaster {...props} usePortal={false} />,\n            containerElement,\n        ) as OverlayToaster;\n        if (toaster == null) {\n            throw new Error(TOASTER_CREATE_NULL);\n        }\n        return toaster;\n    }\n\n    public state: OverlayToasterState = {\n        toasts: [],\n    };\n\n    // auto-incrementing identifier for un-keyed toasts\n    private toastId = 0;\n\n    public show(props: ToastProps, key?: string) {\n        if (this.props.maxToasts) {\n            // check if active number of toasts are at the maxToasts limit\n            this.dismissIfAtLimit();\n        }\n        const options = this.createToastOptions(props, key);\n        if (key === undefined || this.isNewToastKey(key)) {\n            this.setState(prevState => ({\n                toasts: [options, ...prevState.toasts],\n            }));\n        } else {\n            this.setState(prevState => ({\n                toasts: prevState.toasts.map(t => (t.key === key ? options : t)),\n            }));\n        }\n        return options.key;\n    }\n\n    public dismiss(key: string, timeoutExpired = false) {\n        this.setState(({ toasts }) => ({\n            toasts: toasts.filter(t => {\n                const matchesKey = t.key === key;\n                if (matchesKey) {\n                    t.onDismiss?.(timeoutExpired);\n                }\n                return !matchesKey;\n            }),\n        }));\n    }\n\n    public clear() {\n        this.state.toasts.forEach(t => t.onDismiss?.(false));\n        this.setState({ toasts: [] });\n    }\n\n    public getToasts() {\n        return this.state.toasts;\n    }\n\n    public render() {\n        const classes = classNames(Classes.TOAST_CONTAINER, this.getPositionClasses(), this.props.className);\n        return (\n            <Overlay\n                autoFocus={this.props.autoFocus}\n                canEscapeKeyClose={this.props.canEscapeKeyClear}\n                canOutsideClickClose={false}\n                className={classes}\n                enforceFocus={false}\n                hasBackdrop={false}\n                isOpen={this.state.toasts.length > 0 || this.props.children != null}\n                onClose={this.handleClose}\n                shouldReturnFocusOnClose={false}\n                // $pt-transition-duration * 3 + $pt-transition-duration / 2\n                transitionDuration={350}\n                transitionName={Classes.TOAST}\n                usePortal={this.props.usePortal}\n            >\n                {this.state.toasts.map(this.renderToast, this)}\n                {this.props.children}\n            </Overlay>\n        );\n    }\n\n    protected validateProps({ maxToasts }: OverlayToasterProps) {\n        // maximum number of toasts should not be a number less than 1\n        if (maxToasts !== undefined && maxToasts < 1) {\n            throw new Error(TOASTER_MAX_TOASTS_INVALID);\n        }\n    }\n\n    private isNewToastKey(key: string) {\n        return this.state.toasts.every(toast => toast.key !== key);\n    }\n\n    private dismissIfAtLimit() {\n        if (this.state.toasts.length === this.props.maxToasts) {\n            // dismiss the oldest toast to stay within the maxToasts limit\n            this.dismiss(this.state.toasts[this.state.toasts.length - 1].key!);\n        }\n    }\n\n    private renderToast = (toast: ToastOptions) => {\n        return <Toast {...toast} onDismiss={this.getDismissHandler(toast)} />;\n    };\n\n    private createToastOptions(props: ToastProps, key = `toast-${this.toastId++}`) {\n        // clone the object before adding the key prop to avoid leaking the mutation\n        return { ...props, key };\n    }\n\n    private getPositionClasses() {\n        const positions = this.props.position!.split(\"-\");\n        // NOTE that there is no -center class because that's the default style\n        return [\n            ...positions.map(p => `${Classes.TOAST_CONTAINER}-${p.toLowerCase()}`),\n            `${Classes.TOAST_CONTAINER}-${this.props.usePortal ? \"in-portal\" : \"inline\"}`,\n        ];\n    }\n\n    private getDismissHandler = (toast: ToastOptions) => (timeoutExpired: boolean) => {\n        this.dismiss(toast.key, timeoutExpired);\n    };\n\n    private handleClose = (e: React.SyntheticEvent<HTMLElement>) => {\n        // NOTE that `e` isn't always a KeyboardEvent but that's the only type we care about\n        if ((e as React.KeyboardEvent<HTMLElement>).key === \"Escape\") {\n            this.clear();\n        }\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}