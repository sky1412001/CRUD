{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n/**\n * Tab component.\n *\n * @see https://blueprintjs.com/docs/#core/components/tabs.tab\n */\nvar Tab = /** @class */function (_super) {\n  __extends(Tab, _super);\n  function Tab() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  // this component is never rendered directly; see Tabs#renderTabPanel()\n  /* istanbul ignore next */\n  Tab.prototype.render = function () {\n    var _a = this.props,\n      className = _a.className,\n      panel = _a.panel;\n    return React.createElement(\"div\", {\n      className: classNames(Classes.TAB_PANEL, className),\n      role: \"tablist\"\n    }, panel);\n  };\n  Tab.defaultProps = {\n    disabled: false\n  };\n  Tab.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Tab\");\n  return Tab;\n}(AbstractPureComponent);\nexport { Tab };","map":{"version":3,"names":["classNames","React","AbstractPureComponent","Classes","DISPLAYNAME_PREFIX","Tab","_super","__extends","prototype","render","_a","props","className","panel","createElement","TAB_PANEL","role","defaultProps","disabled","displayName","concat"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/components/tabs/tab.tsx"],"sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { IconName } from \"@blueprintjs/icons\";\n\nimport { AbstractPureComponent, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, HTMLDivProps, MaybeElement, Props } from \"../../common/props\";\nimport { TagProps } from \"../tag/tag\";\n\nexport type TabId = string | number;\n\nexport interface TabProps extends Props, Omit<HTMLDivProps, \"id\" | \"title\" | \"onClick\"> {\n    /**\n     * Content of tab title, rendered in a list above the active panel.\n     * Can also be set via the `title` prop.\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Whether the tab is disabled.\n     *\n     * @default false\n     */\n    disabled?: boolean;\n\n    /**\n     * Unique identifier used to control which tab is selected\n     * and to generate ARIA attributes for accessibility.\n     */\n    id: TabId;\n\n    /**\n     * Panel content, rendered by the parent `Tabs` when this tab is active.\n     * If omitted, no panel will be rendered for this tab.\n     */\n    panel?: JSX.Element;\n\n    /**\n     * Space-delimited string of class names applied to tab panel container.\n     */\n    panelClassName?: string;\n\n    /**\n     * Content of tab title element, rendered in a list above the active panel.\n     * Can also be set via React `children`.\n     */\n    title?: React.ReactNode;\n\n    /** Name of a Blueprint UI icon (or an icon element) to render before the children. */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Content to render inside a `<Tag>` after the children.\n     * The tag is `minimal` by default; it can be further modified by using `tagProps`.\n     */\n    tagContent?: TagProps[\"children\"];\n\n    /**\n     * Props to customize the `<Tag>` rendered after the children.\n     * This has no effect if `tagContent` is `undefined`.\n     */\n    tagProps?: Omit<TagProps, \"children\">;\n}\n\n/**\n * Tab component.\n *\n * @see https://blueprintjs.com/docs/#core/components/tabs.tab\n */\nexport class Tab extends AbstractPureComponent<TabProps> {\n    public static defaultProps: Partial<TabProps> = {\n        disabled: false,\n    };\n\n    public static displayName = `${DISPLAYNAME_PREFIX}.Tab`;\n\n    // this component is never rendered directly; see Tabs#renderTabPanel()\n    /* istanbul ignore next */\n    public render() {\n        const { className, panel } = this.props;\n        return (\n            <div className={classNames(Classes.TAB_PANEL, className)} role=\"tablist\">\n                {panel}\n            </div>\n        );\n    }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAI9B,SAASC,qBAAqB,EAAEC,OAAO,QAAQ,cAAc;AAC7D,SAASC,kBAAkB,QAA2C,oBAAoB;AA0D1F;;;;;AAKA,IAAAC,GAAA,0BAAAC,MAAA;EAAyBC,SAAA,CAAAF,GAAA,EAAAC,MAAA;EAAzB,SAAAD,IAAA;;EAiBA;EAVI;EACA;EACOA,GAAA,CAAAG,SAAA,CAAAC,MAAM,GAAb;IACU,IAAAC,EAAA,GAAuB,IAAI,CAACC,KAAK;MAA/BC,SAAS,GAAAF,EAAA,CAAAE,SAAA;MAAEC,KAAK,GAAAH,EAAA,CAAAG,KAAe;IACvC,OACIZ,KAAA,CAAAa,aAAA;MAAKF,SAAS,EAAEZ,UAAU,CAACG,OAAO,CAACY,SAAS,EAAEH,SAAS,CAAC;MAAEI,IAAI,EAAC;IAAS,GACnEH,KAAK,CACJ;EAEd,CAAC;EAfaR,GAAA,CAAAY,YAAY,GAAsB;IAC5CC,QAAQ,EAAE;GACb;EAEab,GAAA,CAAAc,WAAW,GAAG,GAAAC,MAAA,CAAGhB,kBAAkB,SAAM;EAY3D,OAAAC,GAAC;CAAA,CAjBwBH,qBAAqB;SAAjCG,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}