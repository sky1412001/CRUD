{"ast":null,"code":"/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { IconSize, SmallCross } from \"@blueprintjs/icons\";\nimport { AbstractPureComponent, Classes } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { getPositionIgnoreAngles, isPositionHorizontal } from \"../../common/position\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { Button } from \"../button/buttons\";\nimport { H4 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\nimport { Overlay } from \"../overlay/overlay\";\nexport var DrawerSize;\n(function (DrawerSize) {\n  DrawerSize[\"SMALL\"] = \"360px\";\n  DrawerSize[\"STANDARD\"] = \"50%\";\n  DrawerSize[\"LARGE\"] = \"90%\";\n})(DrawerSize || (DrawerSize = {}));\nvar Drawer = /** @class */function (_super) {\n  __extends(Drawer, _super);\n  function Drawer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Drawer.prototype.render = function () {\n    var _a, _b;\n    var _c;\n    var _d = this.props,\n      size = _d.size,\n      style = _d.style,\n      position = _d.position;\n    var realPosition = getPositionIgnoreAngles(position);\n    var classes = classNames(Classes.DRAWER, (_a = {}, _a[(_c = Classes.positionClass(realPosition)) !== null && _c !== void 0 ? _c : \"\"] = true, _a), this.props.className);\n    var styleProp = size == null ? style : __assign(__assign({}, style), (_b = {}, _b[isPositionHorizontal(realPosition) ? \"height\" : \"width\"] = size, _b));\n    return React.createElement(Overlay, __assign({}, this.props, {\n      className: Classes.OVERLAY_CONTAINER\n    }), React.createElement(\"div\", {\n      className: classes,\n      style: styleProp\n    }, this.maybeRenderHeader(), this.props.children));\n  };\n  Drawer.prototype.validateProps = function (props) {\n    if (props.title == null) {\n      if (props.icon != null) {\n        console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON);\n      }\n      if (props.isCloseButtonShown != null) {\n        console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);\n      }\n    }\n    if (props.position != null) {\n      if (props.position !== getPositionIgnoreAngles(props.position)) {\n        console.warn(Errors.DRAWER_ANGLE_POSITIONS_ARE_CASTED);\n      }\n    }\n  };\n  Drawer.prototype.maybeRenderCloseButton = function () {\n    // `isCloseButtonShown` can't be defaulted through default props because of props validation\n    // so this check actually defaults it to true (fails only if directly set to false)\n    if (this.props.isCloseButtonShown !== false) {\n      return React.createElement(Button, {\n        \"aria-label\": \"Close\",\n        className: Classes.DIALOG_CLOSE_BUTTON,\n        icon: React.createElement(SmallCross, {\n          size: IconSize.LARGE\n        }),\n        minimal: true,\n        onClick: this.props.onClose\n      });\n    } else {\n      return null;\n    }\n  };\n  Drawer.prototype.maybeRenderHeader = function () {\n    var _a = this.props,\n      icon = _a.icon,\n      title = _a.title;\n    if (title == null) {\n      return null;\n    }\n    return React.createElement(\"div\", {\n      className: Classes.DRAWER_HEADER\n    }, React.createElement(Icon, {\n      icon: icon,\n      size: IconSize.LARGE\n    }), React.createElement(H4, null, title), this.maybeRenderCloseButton());\n  };\n  Drawer.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Drawer\");\n  Drawer.defaultProps = {\n    canOutsideClickClose: true,\n    isOpen: false,\n    position: \"right\",\n    style: {}\n  };\n  return Drawer;\n}(AbstractPureComponent);\nexport { Drawer };","map":{"version":3,"names":["classNames","React","IconSize","SmallCross","AbstractPureComponent","Classes","Errors","getPositionIgnoreAngles","isPositionHorizontal","DISPLAYNAME_PREFIX","Button","H4","Icon","Overlay","DrawerSize","Drawer","_super","__extends","prototype","render","_d","props","size","style","position","realPosition","classes","DRAWER","_a","_c","positionClass","className","styleProp","__assign","_b","createElement","OVERLAY_CONTAINER","maybeRenderHeader","children","validateProps","title","icon","console","warn","DIALOG_WARN_NO_HEADER_ICON","isCloseButtonShown","DIALOG_WARN_NO_HEADER_CLOSE_BUTTON","DRAWER_ANGLE_POSITIONS_ARE_CASTED","maybeRenderCloseButton","DIALOG_CLOSE_BUTTON","LARGE","minimal","onClick","onClose","DRAWER_HEADER","displayName","concat","defaultProps","canOutsideClickClose","isOpen"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/components/drawer/drawer.tsx"],"sourcesContent":["/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { IconName, IconSize, SmallCross } from \"@blueprintjs/icons\";\n\nimport { AbstractPureComponent, Classes, Props } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { getPositionIgnoreAngles, isPositionHorizontal, Position } from \"../../common/position\";\nimport { DISPLAYNAME_PREFIX, MaybeElement } from \"../../common/props\";\nimport { Button } from \"../button/buttons\";\nimport { H4 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\nimport { BackdropProps, Overlay, OverlayableProps } from \"../overlay/overlay\";\n\nexport enum DrawerSize {\n    SMALL = \"360px\",\n    STANDARD = \"50%\",\n    LARGE = \"90%\",\n}\n\nexport interface DrawerProps extends OverlayableProps, BackdropProps, Props {\n    /** Drawer contents. */\n    children?: React.ReactNode;\n\n    /**\n     * Name of a Blueprint UI icon (or an icon element) to render in the\n     * drawer's header. Note that the header will only be rendered if `title` is\n     * provided.\n     */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Whether to show the close button in the dialog's header.\n     * Note that the header will only be rendered if `title` is provided.\n     *\n     * @default true\n     */\n    isCloseButtonShown?: boolean;\n\n    /**\n     * Toggles the visibility of the overlay and its children.\n     * This prop is required because the component is controlled.\n     */\n    isOpen: boolean;\n\n    /**\n     * Position of a drawer. All angled positions will be casted into pure positions\n     * (top, bottom, left, or right).\n     *\n     * @default \"right\"\n     */\n    position?: Position;\n\n    /**\n     * CSS size of the drawer. This sets `width` if horizontal position (default)\n     * and `height` otherwise.\n     *\n     * Constants are available for common sizes:\n     * - `DrawerSize.SMALL = 360px`\n     * - `DrawerSize.STANDARD = 50%`\n     * - `DrawerSize.LARGE = 90%`\n     *\n     * @default DrawerSize.STANDARD = \"50%\"\n     */\n    size?: number | string;\n\n    /**\n     * CSS styles to apply to the dialog.\n     *\n     * @default {}\n     */\n    style?: React.CSSProperties;\n\n    /**\n     * Title of the dialog. If provided, an element with `Classes.DIALOG_HEADER`\n     * will be rendered inside the dialog before any children elements.\n     */\n    title?: React.ReactNode;\n\n    /**\n     * Name of the transition for internal `CSSTransition`. Providing your own\n     * name here will require defining new CSS transition properties.\n     */\n    transitionName?: string;\n}\n\nexport class Drawer extends AbstractPureComponent<DrawerProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Drawer`;\n\n    public static defaultProps: DrawerProps = {\n        canOutsideClickClose: true,\n        isOpen: false,\n        position: \"right\",\n        style: {},\n    };\n\n    public render() {\n        const { size, style, position } = this.props;\n        const realPosition = getPositionIgnoreAngles(position!);\n\n        const classes = classNames(\n            Classes.DRAWER,\n            {\n                [Classes.positionClass(realPosition) ?? \"\"]: true,\n            },\n            this.props.className,\n        );\n\n        const styleProp =\n            size == null\n                ? style\n                : {\n                      ...style,\n                      [isPositionHorizontal(realPosition) ? \"height\" : \"width\"]: size,\n                  };\n        return (\n            <Overlay {...this.props} className={Classes.OVERLAY_CONTAINER}>\n                <div className={classes} style={styleProp}>\n                    {this.maybeRenderHeader()}\n                    {this.props.children}\n                </div>\n            </Overlay>\n        );\n    }\n\n    protected validateProps(props: DrawerProps) {\n        if (props.title == null) {\n            if (props.icon != null) {\n                console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON);\n            }\n            if (props.isCloseButtonShown != null) {\n                console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);\n            }\n        }\n        if (props.position != null) {\n            if (props.position !== getPositionIgnoreAngles(props.position)) {\n                console.warn(Errors.DRAWER_ANGLE_POSITIONS_ARE_CASTED);\n            }\n        }\n    }\n\n    private maybeRenderCloseButton() {\n        // `isCloseButtonShown` can't be defaulted through default props because of props validation\n        // so this check actually defaults it to true (fails only if directly set to false)\n        if (this.props.isCloseButtonShown !== false) {\n            return (\n                <Button\n                    aria-label=\"Close\"\n                    className={Classes.DIALOG_CLOSE_BUTTON}\n                    icon={<SmallCross size={IconSize.LARGE} />}\n                    minimal={true}\n                    onClick={this.props.onClose}\n                />\n            );\n        } else {\n            return null;\n        }\n    }\n\n    private maybeRenderHeader() {\n        const { icon, title } = this.props;\n        if (title == null) {\n            return null;\n        }\n        return (\n            <div className={Classes.DRAWER_HEADER}>\n                <Icon icon={icon} size={IconSize.LARGE} />\n                <H4>{title}</H4>\n                {this.maybeRenderCloseButton()}\n            </div>\n        );\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}