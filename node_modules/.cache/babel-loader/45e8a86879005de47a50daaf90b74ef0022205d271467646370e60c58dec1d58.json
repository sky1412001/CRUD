{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OverlayToaster } from \"./overlayToaster\";\n// merges with declaration of `Toaster` type in `toasterTypes.ts`\n// kept for backwards-compatibility with v4.x\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport var Toaster = {\n  // eslint-disable-next-line deprecation/deprecation\n  create: deprecatedToasterCreate\n};\n/** @deprecated use OverlayToaster.create() instead */\nfunction deprecatedToasterCreate(props, container) {\n  if (container === void 0) {\n    container = document.body;\n  }\n  return OverlayToaster.create(props, container);\n}","map":{"version":3,"names":["OverlayToaster","Toaster","create","deprecatedToasterCreate","props","container","document","body"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/components/toast/toaster.ts"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OverlayToaster } from \"./overlayToaster\";\nimport type { OverlayToasterProps } from \"./overlayToasterProps\";\nimport type { ToastProps } from \"./toast\";\n\nexport type ToastOptions = ToastProps & { key: string };\n/** Instance methods available on a toaster component instance. */\nexport interface Toaster {\n    /**\n     * Shows a new toast to the user, or updates an existing toast corresponding to the provided key (optional).\n     *\n     * Returns the unique key of the toast.\n     */\n    show(props: ToastProps, key?: string): string;\n\n    /** Dismiss the given toast instantly. */\n    dismiss(key: string): void;\n\n    /** Dismiss all toasts instantly. */\n    clear(): void;\n\n    /** Returns the props for all current toasts. */\n    getToasts(): ToastOptions[];\n}\n\nexport type ToasterInstance = Toaster;\n// merges with declaration of `Toaster` type in `toasterTypes.ts`\n// kept for backwards-compatibility with v4.x\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const Toaster = {\n    // eslint-disable-next-line deprecation/deprecation\n    create: deprecatedToasterCreate,\n};\n\n/** @deprecated use OverlayToaster.create() instead */\nfunction deprecatedToasterCreate(props?: OverlayToasterProps, container = document.body): Toaster {\n    return OverlayToaster.create(props, container);\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,SAASA,cAAc,QAAQ,kBAAkB;AAyBjD;AACA;AACA;AACA,OAAO,IAAMC,OAAO,GAAG;EACnB;EACAC,MAAM,EAAEC;CACX;AAED;AACA,SAASA,uBAAuBA,CAACC,KAA2B,EAAEC,SAAyB;EAAzB,IAAAA,SAAA;IAAAA,SAAA,GAAYC,QAAQ,CAACC,IAAI;EAAA;EACnF,OAAOP,cAAc,CAACE,MAAM,CAACE,KAAK,EAAEC,SAAS,CAAC;AAClD"},"metadata":{},"sourceType":"module","externalDependencies":[]}