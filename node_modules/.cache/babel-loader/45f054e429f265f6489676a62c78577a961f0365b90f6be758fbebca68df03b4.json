{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from \"react\";\nimport * as Errors from \"../../common/errors\";\nimport { isNodeEnv } from \"../../common/utils\";\nimport { useHotkeys } from \"../../hooks\";\n/**\n * Utility component which allows consumers to use the new `useHotkeys` hook inside\n * React component classes. The implementation simply passes through to the hook.\n */\nexport var HotkeysTarget2 = function (_a) {\n  var children = _a.children,\n    hotkeys = _a.hotkeys,\n    options = _a.options;\n  var _b = useHotkeys(hotkeys, options),\n    handleKeyDown = _b.handleKeyDown,\n    handleKeyUp = _b.handleKeyUp;\n  // run props validation\n  React.useEffect(function () {\n    if (!isNodeEnv(\"production\")) {\n      if (typeof children !== \"function\" && hotkeys.some(function (h) {\n        return !h.global;\n      })) {\n        console.error(Errors.HOTKEYS_TARGET_CHILDREN_LOCAL_HOTKEYS);\n      }\n    }\n  }, [hotkeys, children]);\n  if (typeof children === \"function\") {\n    return children({\n      handleKeyDown: handleKeyDown,\n      handleKeyUp: handleKeyUp\n    });\n  } else {\n    return children;\n  }\n};","map":{"version":3,"names":["React","Errors","isNodeEnv","useHotkeys","HotkeysTarget2","_a","children","hotkeys","options","_b","handleKeyDown","handleKeyUp","useEffect","some","h","global","console","error","HOTKEYS_TARGET_CHILDREN_LOCAL_HOTKEYS"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/components/hotkeys/hotkeysTarget2.tsx"],"sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nimport * as Errors from \"../../common/errors\";\nimport { isNodeEnv } from \"../../common/utils\";\nimport { HotkeyConfig, useHotkeys, UseHotkeysOptions } from \"../../hooks\";\n\n/** Identical to the return type of `useHotkeys` hook. */\nexport interface HotkeysTarget2RenderProps {\n    handleKeyDown: React.KeyboardEventHandler<HTMLElement>;\n    handleKeyUp: React.KeyboardEventHandler<HTMLElement>;\n}\n\nexport interface HotkeysTarget2Props {\n    /**\n     * Render prop which receives the same callback handlers generated by the `useHotkeys` hook.\n     * If your hotkey definitions are all global, you may supply an element instead.\n     */\n    children: JSX.Element | ((props: HotkeysTarget2RenderProps) => JSX.Element);\n\n    /** Hotkey definitions. */\n    hotkeys: readonly HotkeyConfig[];\n\n    /** Hook customization options. */\n    options?: UseHotkeysOptions;\n}\n\n/**\n * Utility component which allows consumers to use the new `useHotkeys` hook inside\n * React component classes. The implementation simply passes through to the hook.\n */\nexport const HotkeysTarget2 = ({ children, hotkeys, options }: HotkeysTarget2Props): JSX.Element => {\n    const { handleKeyDown, handleKeyUp } = useHotkeys(hotkeys, options);\n\n    // run props validation\n    React.useEffect(() => {\n        if (!isNodeEnv(\"production\")) {\n            if (typeof children !== \"function\" && hotkeys.some(h => !h.global)) {\n                console.error(Errors.HOTKEYS_TARGET_CHILDREN_LOCAL_HOTKEYS);\n            }\n        }\n    }, [hotkeys, children]);\n\n    if (typeof children === \"function\") {\n        return children({ handleKeyDown, handleKeyUp });\n    } else {\n        return children;\n    }\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAO,KAAKC,MAAM,MAAM,qBAAqB;AAC7C,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAAuBC,UAAU,QAA2B,aAAa;AAsBzE;;;;AAIA,OAAO,IAAMC,cAAc,GAAG,SAAAA,CAACC,EAAmD;MAAjDC,QAAQ,GAAAD,EAAA,CAAAC,QAAA;IAAEC,OAAO,GAAAF,EAAA,CAAAE,OAAA;IAAEC,OAAO,GAAAH,EAAA,CAAAG,OAAA;EACjD,IAAAC,EAAA,GAAiCN,UAAU,CAACI,OAAO,EAAEC,OAAO,CAAC;IAA3DE,aAAa,GAAAD,EAAA,CAAAC,aAAA;IAAEC,WAAW,GAAAF,EAAA,CAAAE,WAAiC;EAEnE;EACAX,KAAK,CAACY,SAAS,CAAC;IACZ,IAAI,CAACV,SAAS,CAAC,YAAY,CAAC,EAAE;MAC1B,IAAI,OAAOI,QAAQ,KAAK,UAAU,IAAIC,OAAO,CAACM,IAAI,CAAC,UAAAC,CAAC;QAAI,QAACA,CAAC,CAACC,MAAM;MAAT,CAAS,CAAC,EAAE;QAChEC,OAAO,CAACC,KAAK,CAAChB,MAAM,CAACiB,qCAAqC,CAAC;;;EAGvE,CAAC,EAAE,CAACX,OAAO,EAAED,QAAQ,CAAC,CAAC;EAEvB,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;IAChC,OAAOA,QAAQ,CAAC;MAAEI,aAAa,EAAAA,aAAA;MAAEC,WAAW,EAAAA;IAAA,CAAE,CAAC;GAClD,MAAM;IACH,OAAOL,QAAQ;;AAEvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}