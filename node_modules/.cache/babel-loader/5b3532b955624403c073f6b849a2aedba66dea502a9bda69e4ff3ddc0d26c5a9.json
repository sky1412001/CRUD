{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { IconSize, SmallCross } from \"@blueprintjs/icons\";\nimport { Classes, DISPLAYNAME_PREFIX, Utils } from \"../../common\";\nimport { isReactNodeEmpty } from \"../../common/utils\";\nimport { Icon } from \"../icon/icon\";\nimport { Text } from \"../text/text\";\n/**\n * Tag component.\n *\n * @see https://blueprintjs.com/docs/#core/components/tag\n */\nexport var Tag = React.forwardRef(function (props, ref) {\n  var _a;\n  var active = props.active,\n    children = props.children,\n    className = props.className,\n    fill = props.fill,\n    icon = props.icon,\n    intent = props.intent,\n    interactive = props.interactive,\n    large = props.large,\n    minimal = props.minimal,\n    multiline = props.multiline,\n    onRemove = props.onRemove,\n    rightIcon = props.rightIcon,\n    round = props.round,\n    _b = props.tabIndex,\n    tabIndex = _b === void 0 ? 0 : _b,\n    htmlTitle = props.htmlTitle,\n    htmlProps = __rest(props, [\"active\", \"children\", \"className\", \"fill\", \"icon\", \"intent\", \"interactive\", \"large\", \"minimal\", \"multiline\", \"onRemove\", \"rightIcon\", \"round\", \"tabIndex\", \"htmlTitle\"]);\n  var isRemovable = Utils.isFunction(onRemove);\n  var tagClasses = classNames(Classes.TAG, Classes.intentClass(intent), (_a = {}, _a[Classes.ACTIVE] = active, _a[Classes.FILL] = fill, _a[Classes.INTERACTIVE] = interactive, _a[Classes.LARGE] = large, _a[Classes.MINIMAL] = minimal, _a[Classes.ROUND] = round, _a), className);\n  var isLarge = large || tagClasses.indexOf(Classes.LARGE) >= 0;\n  var handleRemoveClick = function (e) {\n    var _a;\n    (_a = props.onRemove) === null || _a === void 0 ? void 0 : _a.call(props, e, props);\n  };\n  var removeButton = isRemovable ? React.createElement(\"button\", {\n    \"aria-label\": \"Remove tag\",\n    type: \"button\",\n    className: Classes.TAG_REMOVE,\n    onClick: handleRemoveClick,\n    tabIndex: tabIndex\n  }, React.createElement(SmallCross, {\n    size: isLarge ? IconSize.LARGE : IconSize.STANDARD\n  })) : null;\n  return React.createElement(\"span\", __assign({}, htmlProps, {\n    className: tagClasses,\n    tabIndex: interactive ? tabIndex : undefined,\n    ref: ref\n  }), React.createElement(Icon, {\n    icon: icon\n  }), !isReactNodeEmpty(children) && React.createElement(Text, {\n    className: Classes.FILL,\n    ellipsize: !multiline,\n    tagName: \"span\",\n    title: htmlTitle\n  }, children), React.createElement(Icon, {\n    icon: rightIcon\n  }), removeButton);\n});\nTag.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Tag\");","map":{"version":3,"names":["classNames","React","IconSize","SmallCross","Classes","DISPLAYNAME_PREFIX","Utils","isReactNodeEmpty","Icon","Text","Tag","forwardRef","props","ref","active","children","className","fill","icon","intent","interactive","large","minimal","multiline","onRemove","rightIcon","round","_b","tabIndex","htmlTitle","htmlProps","__rest","isRemovable","isFunction","tagClasses","TAG","intentClass","_a","ACTIVE","FILL","INTERACTIVE","LARGE","MINIMAL","ROUND","isLarge","indexOf","handleRemoveClick","e","call","removeButton","createElement","type","TAG_REMOVE","onClick","size","STANDARD","__assign","undefined","ellipsize","tagName","title","displayName","concat"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/components/tag/tag.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { IconName, IconSize, SmallCross } from \"@blueprintjs/icons\";\n\nimport { Classes, DISPLAYNAME_PREFIX, IntentProps, MaybeElement, Props, Utils } from \"../../common\";\nimport { isReactNodeEmpty } from \"../../common/utils\";\nimport { Icon } from \"../icon/icon\";\nimport { Text } from \"../text/text\";\n\nexport interface TagProps\n    extends Props,\n        IntentProps,\n        React.RefAttributes<HTMLSpanElement>,\n        React.HTMLAttributes<HTMLSpanElement> {\n    /**\n     * Whether the tag should appear in an active state.\n     *\n     * @default false\n     */\n    active?: boolean;\n\n    children?: React.ReactNode;\n\n    /**\n     * Whether the tag should take up the full width of its container.\n     *\n     * @default false\n     */\n    fill?: boolean;\n\n    /** Name of a Blueprint UI icon (or an icon element) to render before the children. */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Whether the tag should visually respond to user interactions. If set\n     * to `true`, hovering over the tag will change its color and mouse cursor.\n     *\n     * Recommended when `onClick` is also defined.\n     *\n     * @default false\n     */\n    interactive?: boolean;\n\n    /**\n     * Whether this tag should use large styles.\n     *\n     * @default false\n     */\n    large?: boolean;\n\n    /**\n     * Whether this tag should use minimal styles.\n     *\n     * @default false\n     */\n    minimal?: boolean;\n\n    /**\n     * Whether tag content should be allowed to occupy multiple lines.\n     * If false, a single line of text will be truncated with an ellipsis if\n     * it overflows. Note that icons will be vertically centered relative to\n     * multiline text.\n     *\n     * @default false\n     */\n    multiline?: boolean;\n\n    /**\n     * Callback invoked when the tag is clicked.\n     * Recommended when `interactive` is `true`.\n     */\n    onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n\n    /**\n     * Click handler for remove button.\n     * The remove button will only be rendered if this prop is defined.\n     */\n    onRemove?: (e: React.MouseEvent<HTMLButtonElement>, tagProps: TagProps) => void;\n\n    /** Name of a Blueprint UI icon (or an icon element) to render after the children. */\n    rightIcon?: IconName | MaybeElement;\n\n    /**\n     * Whether this tag should have rounded ends.\n     *\n     * @default false\n     */\n    round?: boolean;\n\n    /**\n     * HTML title to be passed to the <Text> component\n     */\n    htmlTitle?: string;\n}\n\n/**\n * Tag component.\n *\n * @see https://blueprintjs.com/docs/#core/components/tag\n */\nexport const Tag: React.FC<TagProps> = React.forwardRef((props, ref) => {\n    const {\n        active,\n        children,\n        className,\n        fill,\n        icon,\n        intent,\n        interactive,\n        large,\n        minimal,\n        multiline,\n        onRemove,\n        rightIcon,\n        round,\n        tabIndex = 0,\n        htmlTitle,\n        ...htmlProps\n    } = props;\n    const isRemovable = Utils.isFunction(onRemove);\n    const tagClasses = classNames(\n        Classes.TAG,\n        Classes.intentClass(intent),\n        {\n            [Classes.ACTIVE]: active,\n            [Classes.FILL]: fill,\n            [Classes.INTERACTIVE]: interactive,\n            [Classes.LARGE]: large,\n            [Classes.MINIMAL]: minimal,\n            [Classes.ROUND]: round,\n        },\n        className,\n    );\n    const isLarge = large || tagClasses.indexOf(Classes.LARGE) >= 0;\n    const handleRemoveClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n        props.onRemove?.(e, props);\n    };\n    const removeButton = isRemovable ? (\n        <button\n            aria-label=\"Remove tag\"\n            type=\"button\"\n            className={Classes.TAG_REMOVE}\n            onClick={handleRemoveClick}\n            tabIndex={tabIndex}\n        >\n            <SmallCross size={isLarge ? IconSize.LARGE : IconSize.STANDARD} />\n        </button>\n    ) : null;\n\n    return (\n        <span {...htmlProps} className={tagClasses} tabIndex={interactive ? tabIndex : undefined} ref={ref}>\n            <Icon icon={icon} />\n            {!isReactNodeEmpty(children) && (\n                <Text className={Classes.FILL} ellipsize={!multiline} tagName=\"span\" title={htmlTitle}>\n                    {children}\n                </Text>\n            )}\n            <Icon icon={rightIcon} />\n            {removeButton}\n        </span>\n    );\n});\nTag.displayName = `${DISPLAYNAME_PREFIX}.Tag`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}