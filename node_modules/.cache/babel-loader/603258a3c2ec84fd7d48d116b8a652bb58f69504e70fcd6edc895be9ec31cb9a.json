{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { TreeNode } from \"./treeNode\";\n/**\n * Tree component.\n *\n * @see https://blueprintjs.com/docs/#core/components/tree\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nvar Tree = /** @class */function (_super) {\n  __extends(Tree, _super);\n  function Tree() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.nodeRefs = {};\n    _this.handleContentRef = function (node, element) {\n      if (element != null) {\n        _this.nodeRefs[node.id] = element;\n      } else {\n        // don't want our object to get bloated with old keys\n        delete _this.nodeRefs[node.id];\n      }\n    };\n    _this.handleNodeCollapse = function (node, path, e) {\n      var _a, _b;\n      (_b = (_a = _this.props).onNodeCollapse) === null || _b === void 0 ? void 0 : _b.call(_a, node, path, e);\n    };\n    _this.handleNodeClick = function (node, path, e) {\n      var _a, _b;\n      (_b = (_a = _this.props).onNodeClick) === null || _b === void 0 ? void 0 : _b.call(_a, node, path, e);\n    };\n    _this.handleNodeContextMenu = function (node, path, e) {\n      var _a, _b;\n      (_b = (_a = _this.props).onNodeContextMenu) === null || _b === void 0 ? void 0 : _b.call(_a, node, path, e);\n    };\n    _this.handleNodeDoubleClick = function (node, path, e) {\n      var _a, _b;\n      (_b = (_a = _this.props).onNodeDoubleClick) === null || _b === void 0 ? void 0 : _b.call(_a, node, path, e);\n    };\n    _this.handleNodeExpand = function (node, path, e) {\n      var _a, _b;\n      (_b = (_a = _this.props).onNodeExpand) === null || _b === void 0 ? void 0 : _b.call(_a, node, path, e);\n    };\n    _this.handleNodeMouseEnter = function (node, path, e) {\n      var _a, _b;\n      (_b = (_a = _this.props).onNodeMouseEnter) === null || _b === void 0 ? void 0 : _b.call(_a, node, path, e);\n    };\n    _this.handleNodeMouseLeave = function (node, path, e) {\n      var _a, _b;\n      (_b = (_a = _this.props).onNodeMouseLeave) === null || _b === void 0 ? void 0 : _b.call(_a, node, path, e);\n    };\n    return _this;\n  }\n  Tree.ofType = function () {\n    return Tree;\n  };\n  Tree.nodeFromPath = function (path, treeNodes) {\n    if (path.length === 1) {\n      return treeNodes[path[0]];\n    } else {\n      return Tree.nodeFromPath(path.slice(1), treeNodes[path[0]].childNodes);\n    }\n  };\n  Tree.prototype.render = function () {\n    return React.createElement(\"div\", {\n      className: classNames(Classes.TREE, this.props.className)\n    }, this.renderNodes(this.props.contents, [], Classes.TREE_ROOT));\n  };\n  /**\n   * Returns the underlying HTML element of the `Tree` node with an id of `nodeId`.\n   * This element does not contain the children of the node, only its label and controls.\n   * If the node is not currently mounted, `undefined` is returned.\n   */\n  Tree.prototype.getNodeContentElement = function (nodeId) {\n    return this.nodeRefs[nodeId];\n  };\n  Tree.prototype.renderNodes = function (treeNodes, currentPath, className) {\n    var _this = this;\n    if (treeNodes == null) {\n      return null;\n    }\n    var nodeItems = treeNodes.map(function (node, i) {\n      var elementPath = currentPath.concat(i);\n      return React.createElement(TreeNode, __assign({}, node, {\n        key: node.id,\n        contentRef: _this.handleContentRef,\n        depth: elementPath.length - 1,\n        onClick: _this.handleNodeClick,\n        onContextMenu: _this.handleNodeContextMenu,\n        onCollapse: _this.handleNodeCollapse,\n        onDoubleClick: _this.handleNodeDoubleClick,\n        onExpand: _this.handleNodeExpand,\n        onMouseEnter: _this.handleNodeMouseEnter,\n        onMouseLeave: _this.handleNodeMouseLeave,\n        path: elementPath\n      }), _this.renderNodes(node.childNodes, elementPath));\n    });\n    return React.createElement(\"ul\", {\n      className: classNames(Classes.TREE_NODE_LIST, className)\n    }, nodeItems);\n  };\n  Tree.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Tree\");\n  return Tree;\n}(React.Component);\nexport { Tree };","map":{"version":3,"names":["classNames","React","Classes","DISPLAYNAME_PREFIX","TreeNode","Tree","_super","__extends","_this","apply","arguments","nodeRefs","handleContentRef","node","element","id","handleNodeCollapse","path","e","_b","_a","props","onNodeCollapse","call","handleNodeClick","onNodeClick","handleNodeContextMenu","onNodeContextMenu","handleNodeDoubleClick","onNodeDoubleClick","handleNodeExpand","onNodeExpand","handleNodeMouseEnter","onNodeMouseEnter","handleNodeMouseLeave","onNodeMouseLeave","ofType","nodeFromPath","treeNodes","length","slice","childNodes","prototype","render","createElement","className","TREE","renderNodes","contents","TREE_ROOT","getNodeContentElement","nodeId","currentPath","nodeItems","map","i","elementPath","concat","__assign","key","contentRef","depth","onClick","onContextMenu","onCollapse","onDoubleClick","onExpand","onMouseEnter","onMouseLeave","TREE_NODE_LIST","displayName","Component"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/components/tree/tree.tsx"],"sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { Classes, DISPLAYNAME_PREFIX, Props } from \"../../common\";\nimport { TreeNode } from \"./treeNode\";\nimport { TreeEventHandler, TreeNodeInfo } from \"./treeTypes\";\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport interface TreeProps<T = {}> extends Props {\n    /**\n     * The data specifying the contents and appearance of the tree.\n     */\n    contents: ReadonlyArray<TreeNodeInfo<T>>;\n\n    /**\n     * Invoked when a node is clicked anywhere other than the caret for expanding/collapsing the node.\n     */\n    onNodeClick?: TreeEventHandler<T>;\n\n    /**\n     * Invoked when caret of an expanded node is clicked.\n     */\n    onNodeCollapse?: TreeEventHandler<T>;\n\n    /**\n     * Invoked when a node is right-clicked or the context menu button is pressed on a focused node.\n     */\n    onNodeContextMenu?: TreeEventHandler<T>;\n\n    /**\n     * Invoked when a node is double-clicked. Be careful when using this in combination with\n     * an `onNodeClick` (single-click) handler, as the way this behaves can vary between browsers.\n     * See http://stackoverflow.com/q/5497073/3124288\n     */\n    onNodeDoubleClick?: TreeEventHandler<T>;\n\n    /**\n     * Invoked when the caret of a collapsed node is clicked.\n     */\n    onNodeExpand?: TreeEventHandler<T>;\n\n    /**\n     * Invoked when the mouse is moved over a node.\n     */\n    onNodeMouseEnter?: TreeEventHandler<T>;\n\n    /**\n     * Invoked when the mouse is moved out of a node.\n     */\n    onNodeMouseLeave?: TreeEventHandler<T>;\n}\n\n/**\n * Tree component.\n *\n * @see https://blueprintjs.com/docs/#core/components/tree\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport class Tree<T = {}> extends React.Component<TreeProps<T>> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Tree`;\n\n    public static ofType<U>() {\n        return Tree as new (props: TreeProps<U>) => Tree<U>;\n    }\n\n    public static nodeFromPath<U>(\n        path: readonly number[],\n        treeNodes?: ReadonlyArray<TreeNodeInfo<U>>,\n    ): TreeNodeInfo<U> {\n        if (path.length === 1) {\n            return treeNodes![path[0]];\n        } else {\n            return Tree.nodeFromPath(path.slice(1), treeNodes![path[0]].childNodes);\n        }\n    }\n\n    private nodeRefs: { [nodeId: string]: HTMLElement } = {};\n\n    public render() {\n        return (\n            <div className={classNames(Classes.TREE, this.props.className)}>\n                {this.renderNodes(this.props.contents, [], Classes.TREE_ROOT)}\n            </div>\n        );\n    }\n\n    /**\n     * Returns the underlying HTML element of the `Tree` node with an id of `nodeId`.\n     * This element does not contain the children of the node, only its label and controls.\n     * If the node is not currently mounted, `undefined` is returned.\n     */\n    public getNodeContentElement(nodeId: string | number): HTMLElement | undefined {\n        return this.nodeRefs[nodeId];\n    }\n\n    private renderNodes(\n        treeNodes: ReadonlyArray<TreeNodeInfo<T>> | undefined,\n        currentPath?: number[],\n        className?: string,\n    ) {\n        if (treeNodes == null) {\n            return null;\n        }\n\n        const nodeItems = treeNodes.map((node, i) => {\n            const elementPath = currentPath!.concat(i);\n            return (\n                <TreeNode<T>\n                    {...node}\n                    key={node.id}\n                    contentRef={this.handleContentRef}\n                    depth={elementPath.length - 1}\n                    onClick={this.handleNodeClick}\n                    onContextMenu={this.handleNodeContextMenu}\n                    onCollapse={this.handleNodeCollapse}\n                    onDoubleClick={this.handleNodeDoubleClick}\n                    onExpand={this.handleNodeExpand}\n                    onMouseEnter={this.handleNodeMouseEnter}\n                    onMouseLeave={this.handleNodeMouseLeave}\n                    path={elementPath}\n                >\n                    {this.renderNodes(node.childNodes, elementPath)}\n                </TreeNode>\n            );\n        });\n\n        return <ul className={classNames(Classes.TREE_NODE_LIST, className)}>{nodeItems}</ul>;\n    }\n\n    private handleContentRef = (node: TreeNodeInfo<T>, element: HTMLElement | null) => {\n        if (element != null) {\n            this.nodeRefs[node.id] = element;\n        } else {\n            // don't want our object to get bloated with old keys\n            delete this.nodeRefs[node.id];\n        }\n    };\n\n    private handleNodeCollapse = (node: TreeNodeInfo<T>, path: number[], e: React.MouseEvent<HTMLElement>) => {\n        this.props.onNodeCollapse?.(node, path, e);\n    };\n\n    private handleNodeClick = (node: TreeNodeInfo<T>, path: number[], e: React.MouseEvent<HTMLElement>) => {\n        this.props.onNodeClick?.(node, path, e);\n    };\n\n    private handleNodeContextMenu = (node: TreeNodeInfo<T>, path: number[], e: React.MouseEvent<HTMLElement>) => {\n        this.props.onNodeContextMenu?.(node, path, e);\n    };\n\n    private handleNodeDoubleClick = (node: TreeNodeInfo<T>, path: number[], e: React.MouseEvent<HTMLElement>) => {\n        this.props.onNodeDoubleClick?.(node, path, e);\n    };\n\n    private handleNodeExpand = (node: TreeNodeInfo<T>, path: number[], e: React.MouseEvent<HTMLElement>) => {\n        this.props.onNodeExpand?.(node, path, e);\n    };\n\n    private handleNodeMouseEnter = (node: TreeNodeInfo<T>, path: number[], e: React.MouseEvent<HTMLElement>) => {\n        this.props.onNodeMouseEnter?.(node, path, e);\n    };\n\n    private handleNodeMouseLeave = (node: TreeNodeInfo<T>, path: number[], e: React.MouseEvent<HTMLElement>) => {\n        this.props.onNodeMouseLeave?.(node, path, e);\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}