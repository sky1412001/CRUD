{"ast":null,"code":"/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { CaretDown, DoubleCaretVertical } from \"@blueprintjs/icons\";\nimport { DISABLED, FILL, HTML_SELECT, LARGE, MINIMAL } from \"../../common/classes\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n// this component is simple enough that tests would be purely tautological.\n/* istanbul ignore next */\n/**\n * HTML select component\n *\n * @see https://blueprintjs.com/docs/#core/components/html-select\n */\nexport var HTMLSelect = React.forwardRef(function (props, ref) {\n  var _a;\n  var className = props.className,\n    children = props.children,\n    disabled = props.disabled,\n    fill = props.fill,\n    _b = props.iconName,\n    iconName = _b === void 0 ? \"double-caret-vertical\" : _b,\n    iconProps = props.iconProps,\n    large = props.large,\n    minimal = props.minimal,\n    _c = props.options,\n    options = _c === void 0 ? [] : _c,\n    value = props.value,\n    htmlProps = __rest(props, [\"className\", \"children\", \"disabled\", \"fill\", \"iconName\", \"iconProps\", \"large\", \"minimal\", \"options\", \"value\"]);\n  var classes = classNames(HTML_SELECT, (_a = {}, _a[DISABLED] = disabled, _a[FILL] = fill, _a[LARGE] = large, _a[MINIMAL] = minimal, _a), className);\n  var iconTitle = \"Open dropdown\";\n  var rightIcon = iconName === \"double-caret-vertical\" ? React.createElement(DoubleCaretVertical, __assign({\n    title: iconTitle\n  }, iconProps)) : React.createElement(CaretDown, __assign({\n    title: iconTitle\n  }, iconProps));\n  var optionChildren = options.map(function (option) {\n    var optionProps = typeof option === \"object\" ? option : {\n      value: option\n    };\n    return React.createElement(\"option\", __assign({}, optionProps, {\n      key: optionProps.value,\n      children: optionProps.label || optionProps.value\n    }));\n  });\n  return React.createElement(\"div\", {\n    className: classes\n  }, React.createElement(\"select\", __assign({\n    disabled: disabled,\n    ref: ref,\n    value: value\n  }, htmlProps, {\n    multiple: false\n  }), optionChildren, children), rightIcon);\n});\nHTMLSelect.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".HTMLSelect\");","map":{"version":3,"names":["classNames","React","CaretDown","DoubleCaretVertical","DISABLED","FILL","HTML_SELECT","LARGE","MINIMAL","DISPLAYNAME_PREFIX","HTMLSelect","forwardRef","props","ref","className","children","disabled","fill","_b","iconName","iconProps","large","minimal","_c","options","value","htmlProps","__rest","classes","_a","iconTitle","rightIcon","createElement","__assign","title","optionChildren","map","option","optionProps","key","label","multiple","displayName","concat"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/components/html-select/htmlSelect.tsx"],"sourcesContent":["/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { CaretDown, DoubleCaretVertical, IconName, SVGIconProps } from \"@blueprintjs/icons\";\n\nimport { DISABLED, FILL, HTML_SELECT, LARGE, MINIMAL } from \"../../common/classes\";\nimport { DISPLAYNAME_PREFIX, OptionProps } from \"../../common/props\";\nimport { Extends } from \"../../common/utils\";\n\nexport type HTMLSelectIconName = Extends<IconName, \"double-caret-vertical\" | \"caret-down\">;\n\nexport interface HTMLSelectProps\n    extends React.RefAttributes<HTMLSelectElement>,\n        React.SelectHTMLAttributes<HTMLSelectElement> {\n    children?: React.ReactNode;\n\n    /** Whether this element is non-interactive. */\n    disabled?: boolean;\n\n    /** Whether this element should fill its container. */\n    fill?: boolean;\n\n    /**\n     * Name of one of the supported icons for this component to display on the right side of the element.\n     *\n     * @default \"double-caret-vertical\"\n     */\n    iconName?: HTMLSelectIconName;\n\n    /**\n     * Props to spread to the icon element displayed on the right side of the element.\n     */\n    iconProps?: Partial<SVGIconProps>;\n\n    /** Whether to use large styles. */\n    large?: boolean;\n\n    /** Whether to use minimal styles. */\n    minimal?: boolean;\n\n    /** Multiple select is not supported. */\n    multiple?: never;\n\n    /** Change event handler. Use `event.currentTarget.value` to access the new value. */\n    onChange?: React.ChangeEventHandler<HTMLSelectElement>;\n\n    /**\n     * Shorthand for supplying options: an array of basic types or\n     * `{ label?, value }` objects. If no `label` is supplied, `value`\n     * will be used as the label.\n     */\n    options?: ReadonlyArray<string | number | OptionProps>;\n\n    /** Controlled value of this component. */\n    value?: string | number;\n}\n\n// this component is simple enough that tests would be purely tautological.\n/* istanbul ignore next */\n/**\n * HTML select component\n *\n * @see https://blueprintjs.com/docs/#core/components/html-select\n */\nexport const HTMLSelect: React.FC<HTMLSelectProps> = React.forwardRef((props, ref) => {\n    const {\n        className,\n        children,\n        disabled,\n        fill,\n        iconName = \"double-caret-vertical\",\n        iconProps,\n        large,\n        minimal,\n        options = [],\n        value,\n        ...htmlProps\n    } = props;\n    const classes = classNames(\n        HTML_SELECT,\n        {\n            [DISABLED]: disabled,\n            [FILL]: fill,\n            [LARGE]: large,\n            [MINIMAL]: minimal,\n        },\n        className,\n    );\n\n    const iconTitle = \"Open dropdown\";\n    const rightIcon =\n        iconName === \"double-caret-vertical\" ? (\n            <DoubleCaretVertical title={iconTitle} {...iconProps} />\n        ) : (\n            <CaretDown title={iconTitle} {...iconProps} />\n        );\n\n    const optionChildren = options.map(option => {\n        const optionProps: OptionProps = typeof option === \"object\" ? option : { value: option };\n        return <option {...optionProps} key={optionProps.value} children={optionProps.label || optionProps.value} />;\n    });\n\n    return (\n        <div className={classes}>\n            <select disabled={disabled} ref={ref} value={value} {...htmlProps} multiple={false}>\n                {optionChildren}\n                {children}\n            </select>\n            {rightIcon}\n        </div>\n    );\n});\nHTMLSelect.displayName = `${DISPLAYNAME_PREFIX}.HTMLSelect`;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,SAAS,EAAEC,mBAAmB,QAAgC,oBAAoB;AAE3F,SAASC,QAAQ,EAAEC,IAAI,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,QAAQ,sBAAsB;AAClF,SAASC,kBAAkB,QAAqB,oBAAoB;AAmDpE;AACA;AACA;;;;;AAKA,OAAO,IAAMC,UAAU,GAA8BT,KAAK,CAACU,UAAU,CAAC,UAACC,KAAK,EAAEC,GAAG;;EAEzE,IAAAC,SAAS,GAWTF,KAAK,CAAAE,SAXI;IACTC,QAAQ,GAURH,KAAK,CAAAG,QAVG;IACRC,QAAQ,GASRJ,KAAK,CAAAI,QATG;IACRC,IAAI,GAQJL,KAAK,CAAAK,IARD;IACJC,EAAA,GAOAN,KAAK,CAAAO,QAP6B;IAAlCA,QAAQ,GAAAD,EAAA,cAAG,uBAAuB,GAAAA,EAAA;IAClCE,SAAS,GAMTR,KAAK,CAAAQ,SANI;IACTC,KAAK,GAKLT,KAAK,CAAAS,KALA;IACLC,OAAO,GAIPV,KAAK,CAAAU,OAJE;IACPC,EAAA,GAGAX,KAAK,CAAAY,OAHO;IAAZA,OAAO,GAAAD,EAAA,cAAG,EAAE,GAAAA,EAAA;IACZE,KAAK,GAELb,KAAK,CAAAa,KAFA;IACFC,SAAS,GAAAC,MAAA,CACZf,KAAK,EAZH,8GAYL,CADe;EAEhB,IAAMgB,OAAO,GAAG5B,UAAU,CACtBM,WAAW,GAAAuB,EAAA,OAEPA,EAAA,CAACzB,QAAQ,IAAGY,QAAQ,EACpBa,EAAA,CAACxB,IAAI,IAAGY,IAAI,EACZY,EAAA,CAACtB,KAAK,IAAGc,KAAK,EACdQ,EAAA,CAACrB,OAAO,IAAGc,OAAO,E,KAEtBR,SAAS,CACZ;EAED,IAAMgB,SAAS,GAAG,eAAe;EACjC,IAAMC,SAAS,GACXZ,QAAQ,KAAK,uBAAuB,GAChClB,KAAA,CAAA+B,aAAA,CAAC7B,mBAAmB,EAAA8B,QAAA;IAACC,KAAK,EAAEJ;EAAS,GAAMV,SAAS,EAAI,GAExDnB,KAAA,CAAA+B,aAAA,CAAC9B,SAAS,EAAA+B,QAAA;IAACC,KAAK,EAAEJ;EAAS,GAAMV,SAAS,EAC7C;EAEL,IAAMe,cAAc,GAAGX,OAAO,CAACY,GAAG,CAAC,UAAAC,MAAM;IACrC,IAAMC,WAAW,GAAgB,OAAOD,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAG;MAAEZ,KAAK,EAAEY;IAAM,CAAE;IACxF,OAAOpC,KAAA,CAAA+B,aAAA,WAAAC,QAAA,KAAYK,WAAW;MAAEC,GAAG,EAAED,WAAW,CAACb,KAAK;MAAEV,QAAQ,EAAEuB,WAAW,CAACE,KAAK,IAAIF,WAAW,CAACb;IAAK,GAAI;EAChH,CAAC,CAAC;EAEF,OACIxB,KAAA,CAAA+B,aAAA;IAAKlB,SAAS,EAAEc;EAAO,GACnB3B,KAAA,CAAA+B,aAAA,WAAAC,QAAA;IAAQjB,QAAQ,EAAEA,QAAQ;IAAEH,GAAG,EAAEA,GAAG;IAAEY,KAAK,EAAEA;EAAK,GAAMC,SAAS;IAAEe,QAAQ,EAAE;EAAK,IAC7EN,cAAc,EACdpB,QAAQ,CACJ,EACRgB,SAAS,CACR;AAEd,CAAC,CAAC;AACFrB,UAAU,CAACgC,WAAW,GAAG,GAAAC,MAAA,CAAGlC,kBAAkB,gBAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}