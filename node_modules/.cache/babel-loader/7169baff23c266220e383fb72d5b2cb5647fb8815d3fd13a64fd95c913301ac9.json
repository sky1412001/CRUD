{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Cross } from \"@blueprintjs/icons\";\nimport { AbstractPureComponent, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { ButtonGroup } from \"../button/buttonGroup\";\nimport { AnchorButton, Button } from \"../button/buttons\";\nimport { Icon } from \"../icon/icon\";\n/**\n * Toast component.\n *\n * @see https://blueprintjs.com/docs/#core/components/toast\n */\nvar Toast = /** @class */function (_super) {\n  __extends(Toast, _super);\n  function Toast() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.handleActionClick = function (e) {\n      var _a, _b;\n      (_b = (_a = _this.props.action) === null || _a === void 0 ? void 0 : _a.onClick) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n      _this.triggerDismiss(false);\n    };\n    _this.handleCloseClick = function () {\n      return _this.triggerDismiss(false);\n    };\n    _this.startTimeout = function () {\n      _this.clearTimeouts();\n      if (_this.props.timeout > 0) {\n        _this.setTimeout(function () {\n          return _this.triggerDismiss(true);\n        }, _this.props.timeout);\n      }\n    };\n    return _this;\n  }\n  Toast.prototype.render = function () {\n    var _a = this.props,\n      className = _a.className,\n      icon = _a.icon,\n      intent = _a.intent,\n      message = _a.message,\n      isCloseButtonShown = _a.isCloseButtonShown;\n    return React.createElement(\"div\", {\n      className: classNames(Classes.TOAST, Classes.intentClass(intent), className),\n      onBlur: this.startTimeout,\n      onFocus: this.clearTimeouts,\n      onMouseEnter: this.clearTimeouts,\n      onMouseLeave: this.startTimeout,\n      tabIndex: 0\n    }, React.createElement(Icon, {\n      icon: icon\n    }), React.createElement(\"span\", {\n      className: Classes.TOAST_MESSAGE,\n      role: \"alert\"\n    }, message), React.createElement(ButtonGroup, {\n      minimal: true\n    }, this.maybeRenderActionButton(), isCloseButtonShown && React.createElement(Button, {\n      \"aria-label\": \"Close\",\n      icon: React.createElement(Cross, null),\n      onClick: this.handleCloseClick\n    })));\n  };\n  Toast.prototype.componentDidMount = function () {\n    this.startTimeout();\n  };\n  Toast.prototype.componentDidUpdate = function (prevProps) {\n    if (prevProps.timeout !== this.props.timeout) {\n      if (this.props.timeout > 0) {\n        this.startTimeout();\n      } else {\n        this.clearTimeouts();\n      }\n    }\n  };\n  Toast.prototype.componentWillUnmount = function () {\n    this.clearTimeouts();\n  };\n  Toast.prototype.maybeRenderActionButton = function () {\n    var action = this.props.action;\n    if (action == null) {\n      return undefined;\n    } else {\n      return React.createElement(AnchorButton, __assign({}, action, {\n        intent: undefined,\n        onClick: this.handleActionClick\n      }));\n    }\n  };\n  Toast.prototype.triggerDismiss = function (didTimeoutExpire) {\n    var _a, _b;\n    this.clearTimeouts();\n    (_b = (_a = this.props).onDismiss) === null || _b === void 0 ? void 0 : _b.call(_a, didTimeoutExpire);\n  };\n  Toast.defaultProps = {\n    className: \"\",\n    isCloseButtonShown: true,\n    message: \"\",\n    timeout: 5000\n  };\n  Toast.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Toast\");\n  return Toast;\n}(AbstractPureComponent);\nexport { Toast };","map":{"version":3,"names":["classNames","React","Cross","AbstractPureComponent","Classes","DISPLAYNAME_PREFIX","ButtonGroup","AnchorButton","Button","Icon","Toast","_super","__extends","_this","apply","arguments","handleActionClick","e","_b","_a","props","action","onClick","call","triggerDismiss","handleCloseClick","startTimeout","clearTimeouts","timeout","setTimeout","prototype","render","className","icon","intent","message","isCloseButtonShown","createElement","TOAST","intentClass","onBlur","onFocus","onMouseEnter","onMouseLeave","tabIndex","TOAST_MESSAGE","role","minimal","maybeRenderActionButton","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","undefined","__assign","didTimeoutExpire","onDismiss","defaultProps","displayName","concat"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/components/toast/toast.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { Cross } from \"@blueprintjs/icons\";\n\nimport { AbstractPureComponent, Classes } from \"../../common\";\nimport { ActionProps, DISPLAYNAME_PREFIX, IntentProps, LinkProps, MaybeElement, Props } from \"../../common/props\";\nimport { ButtonGroup } from \"../button/buttonGroup\";\nimport { AnchorButton, Button } from \"../button/buttons\";\nimport { Icon, IconName } from \"../icon/icon\";\n\nexport interface ToastProps extends Props, IntentProps {\n    /**\n     * Action rendered as a minimal `AnchorButton`. The toast is dismissed automatically when the\n     * user clicks the action button. Note that the `intent` prop is ignored (the action button\n     * cannot have its own intent color that might conflict with the toast's intent). Omit this\n     * prop to omit the action button.\n     */\n    action?: ActionProps & LinkProps;\n\n    /** Name of a Blueprint UI icon (or an icon element) to render before the message. */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Whether to show the close button in the toast.\n     *\n     * @default true\n     */\n    isCloseButtonShown?: boolean;\n\n    /** Message to display in the body of the toast. */\n    message: React.ReactNode;\n\n    /**\n     * Callback invoked when the toast is dismissed, either by the user or by the timeout.\n     * The value of the argument indicates whether the toast was closed because the timeout expired.\n     */\n    onDismiss?: (didTimeoutExpire: boolean) => void;\n\n    /**\n     * Milliseconds to wait before automatically dismissing toast.\n     * Providing a value less than or equal to 0 will disable the timeout (this is discouraged).\n     *\n     * @default 5000\n     */\n    timeout?: number;\n}\n\n/**\n * Toast component.\n *\n * @see https://blueprintjs.com/docs/#core/components/toast\n */\nexport class Toast extends AbstractPureComponent<ToastProps> {\n    public static defaultProps: ToastProps = {\n        className: \"\",\n        isCloseButtonShown: true,\n        message: \"\",\n        timeout: 5000,\n    };\n\n    public static displayName = `${DISPLAYNAME_PREFIX}.Toast`;\n\n    public render(): JSX.Element {\n        const { className, icon, intent, message, isCloseButtonShown } = this.props;\n        return (\n            <div\n                className={classNames(Classes.TOAST, Classes.intentClass(intent), className)}\n                onBlur={this.startTimeout}\n                onFocus={this.clearTimeouts}\n                onMouseEnter={this.clearTimeouts}\n                onMouseLeave={this.startTimeout}\n                tabIndex={0}\n            >\n                <Icon icon={icon} />\n                <span className={Classes.TOAST_MESSAGE} role=\"alert\">\n                    {message}\n                </span>\n                <ButtonGroup minimal={true}>\n                    {this.maybeRenderActionButton()}\n                    {isCloseButtonShown && (\n                        <Button aria-label=\"Close\" icon={<Cross />} onClick={this.handleCloseClick} />\n                    )}\n                </ButtonGroup>\n            </div>\n        );\n    }\n\n    public componentDidMount() {\n        this.startTimeout();\n    }\n\n    public componentDidUpdate(prevProps: ToastProps) {\n        if (prevProps.timeout !== this.props.timeout) {\n            if (this.props.timeout! > 0) {\n                this.startTimeout();\n            } else {\n                this.clearTimeouts();\n            }\n        }\n    }\n\n    public componentWillUnmount() {\n        this.clearTimeouts();\n    }\n\n    private maybeRenderActionButton() {\n        const { action } = this.props;\n        if (action == null) {\n            return undefined;\n        } else {\n            return <AnchorButton {...action} intent={undefined} onClick={this.handleActionClick} />;\n        }\n    }\n\n    private handleActionClick = (e: React.MouseEvent<HTMLElement>) => {\n        this.props.action?.onClick?.(e);\n        this.triggerDismiss(false);\n    };\n\n    private handleCloseClick = () => this.triggerDismiss(false);\n\n    private triggerDismiss(didTimeoutExpire: boolean) {\n        this.clearTimeouts();\n        this.props.onDismiss?.(didTimeoutExpire);\n    }\n\n    private startTimeout = () => {\n        this.clearTimeouts();\n        if (this.props.timeout! > 0) {\n            this.setTimeout(() => this.triggerDismiss(true), this.props.timeout);\n        }\n    };\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,KAAK,QAAQ,oBAAoB;AAE1C,SAASC,qBAAqB,EAAEC,OAAO,QAAQ,cAAc;AAC7D,SAAsBC,kBAAkB,QAAqD,oBAAoB;AACjH,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,YAAY,EAAEC,MAAM,QAAQ,mBAAmB;AACxD,SAASC,IAAI,QAAkB,cAAc;AAuC7C;;;;;AAKA,IAAAC,KAAA,0BAAAC,MAAA;EAA2BC,SAAA,CAAAF,KAAA,EAAAC,MAAA;EAA3B,SAAAD,MAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IA8DYF,KAAA,CAAAG,iBAAiB,GAAG,UAACC,CAAgC;;MACzD,CAAAC,EAAA,IAAAC,EAAA,GAAAN,KAAI,CAACO,KAAK,CAACC,MAAM,cAAAF,EAAA,uBAAAA,EAAA,CAAEG,OAAO,cAAAJ,EAAA,uBAAAA,EAAA,CAAAK,IAAA,CAAAJ,EAAA,EAAGF,CAAC,CAAC;MAC/BJ,KAAI,CAACW,cAAc,CAAC,KAAK,CAAC;IAC9B,CAAC;IAEOX,KAAA,CAAAY,gBAAgB,GAAG;MAAM,OAAAZ,KAAI,CAACW,cAAc,CAAC,KAAK,CAAC;IAA1B,CAA0B;IAOnDX,KAAA,CAAAa,YAAY,GAAG;MACnBb,KAAI,CAACc,aAAa,EAAE;MACpB,IAAId,KAAI,CAACO,KAAK,CAACQ,OAAQ,GAAG,CAAC,EAAE;QACzBf,KAAI,CAACgB,UAAU,CAAC;UAAM,OAAAhB,KAAI,CAACW,cAAc,CAAC,IAAI,CAAC;QAAzB,CAAyB,EAAEX,KAAI,CAACO,KAAK,CAACQ,OAAO,CAAC;;IAE5E,CAAC;;EACL;EAtEWlB,KAAA,CAAAoB,SAAA,CAAAC,MAAM,GAAb;IACU,IAAAZ,EAAA,GAA2D,IAAI,CAACC,KAAK;MAAnEY,SAAS,GAAAb,EAAA,CAAAa,SAAA;MAAEC,IAAI,GAAAd,EAAA,CAAAc,IAAA;MAAEC,MAAM,GAAAf,EAAA,CAAAe,MAAA;MAAEC,OAAO,GAAAhB,EAAA,CAAAgB,OAAA;MAAEC,kBAAkB,GAAAjB,EAAA,CAAAiB,kBAAe;IAC3E,OACInC,KAAA,CAAAoC,aAAA;MACIL,SAAS,EAAEhC,UAAU,CAACI,OAAO,CAACkC,KAAK,EAAElC,OAAO,CAACmC,WAAW,CAACL,MAAM,CAAC,EAAEF,SAAS,CAAC;MAC5EQ,MAAM,EAAE,IAAI,CAACd,YAAY;MACzBe,OAAO,EAAE,IAAI,CAACd,aAAa;MAC3Be,YAAY,EAAE,IAAI,CAACf,aAAa;MAChCgB,YAAY,EAAE,IAAI,CAACjB,YAAY;MAC/BkB,QAAQ,EAAE;IAAC,GAEX3C,KAAA,CAAAoC,aAAA,CAAC5B,IAAI;MAACwB,IAAI,EAAEA;IAAI,EAAI,EACpBhC,KAAA,CAAAoC,aAAA;MAAML,SAAS,EAAE5B,OAAO,CAACyC,aAAa;MAAEC,IAAI,EAAC;IAAO,GAC/CX,OAAO,CACL,EACPlC,KAAA,CAAAoC,aAAA,CAAC/B,WAAW;MAACyC,OAAO,EAAE;IAAI,GACrB,IAAI,CAACC,uBAAuB,EAAE,EAC9BZ,kBAAkB,IACfnC,KAAA,CAAAoC,aAAA,CAAC7B,MAAM;MAAA,cAAY,OAAO;MAACyB,IAAI,EAAEhC,KAAA,CAAAoC,aAAA,CAACnC,KAAK,OAAG;MAAEoB,OAAO,EAAE,IAAI,CAACG;IAAgB,EAC7E,CACS,CACZ;EAEd,CAAC;EAEMf,KAAA,CAAAoB,SAAA,CAAAmB,iBAAiB,GAAxB;IACI,IAAI,CAACvB,YAAY,EAAE;EACvB,CAAC;EAEMhB,KAAA,CAAAoB,SAAA,CAAAoB,kBAAkB,GAAzB,UAA0BC,SAAqB;IAC3C,IAAIA,SAAS,CAACvB,OAAO,KAAK,IAAI,CAACR,KAAK,CAACQ,OAAO,EAAE;MAC1C,IAAI,IAAI,CAACR,KAAK,CAACQ,OAAQ,GAAG,CAAC,EAAE;QACzB,IAAI,CAACF,YAAY,EAAE;OACtB,MAAM;QACH,IAAI,CAACC,aAAa,EAAE;;;EAGhC,CAAC;EAEMjB,KAAA,CAAAoB,SAAA,CAAAsB,oBAAoB,GAA3B;IACI,IAAI,CAACzB,aAAa,EAAE;EACxB,CAAC;EAEOjB,KAAA,CAAAoB,SAAA,CAAAkB,uBAAuB,GAA/B;IACY,IAAA3B,MAAM,GAAK,IAAI,CAACD,KAAK,CAAAC,MAAf;IACd,IAAIA,MAAM,IAAI,IAAI,EAAE;MAChB,OAAOgC,SAAS;KACnB,MAAM;MACH,OAAOpD,KAAA,CAAAoC,aAAA,CAAC9B,YAAY,EAAA+C,QAAA,KAAKjC,MAAM;QAAEa,MAAM,EAAEmB,SAAS;QAAE/B,OAAO,EAAE,IAAI,CAACN;MAAiB,GAAI;;EAE/F,CAAC;EASON,KAAA,CAAAoB,SAAA,CAAAN,cAAc,GAAtB,UAAuB+B,gBAAyB;;IAC5C,IAAI,CAAC5B,aAAa,EAAE;IACpB,CAAAT,EAAA,IAAAC,EAAA,OAAI,CAACC,KAAK,EAACoC,SAAS,cAAAtC,EAAA,uBAAAA,EAAA,CAAAK,IAAA,CAAAJ,EAAA,EAAGoC,gBAAgB,CAAC;EAC5C,CAAC;EAvEa7C,KAAA,CAAA+C,YAAY,GAAe;IACrCzB,SAAS,EAAE,EAAE;IACbI,kBAAkB,EAAE,IAAI;IACxBD,OAAO,EAAE,EAAE;IACXP,OAAO,EAAE;GACZ;EAEalB,KAAA,CAAAgD,WAAW,GAAG,GAAAC,MAAA,CAAGtD,kBAAkB,WAAQ;EAwE7D,OAAAK,KAAC;CAAA,CAhF0BP,qBAAqB;SAAnCO,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}