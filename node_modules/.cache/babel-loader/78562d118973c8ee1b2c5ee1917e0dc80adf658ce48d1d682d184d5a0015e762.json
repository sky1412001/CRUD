{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent, Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { KeyComboTag } from \"./keyComboTag\";\n/**\n * Hotkey component used to display a hotkey in the HotkeysDialog.\n * Should not be used by consumers directly.\n */\nvar Hotkey = /** @class */function (_super) {\n  __extends(Hotkey, _super);\n  function Hotkey() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Hotkey.prototype.render = function () {\n    var _a = this.props,\n      label = _a.label,\n      className = _a.className,\n      spreadableProps = __rest(_a, [\"label\", \"className\"]);\n    var rootClasses = classNames(Classes.HOTKEY, className);\n    return React.createElement(\"div\", {\n      className: rootClasses\n    }, React.createElement(\"div\", {\n      className: Classes.HOTKEY_LABEL\n    }, label), React.createElement(KeyComboTag, __assign({}, spreadableProps)));\n  };\n  Hotkey.prototype.validateProps = function (props) {\n    if (props.global !== true && props.group == null) {\n      console.error(\"non-global Hotkeys must define a group\");\n    }\n  };\n  Hotkey.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Hotkey\");\n  Hotkey.defaultProps = {\n    allowInInput: false,\n    disabled: false,\n    global: false,\n    preventDefault: false,\n    stopPropagation: false\n  };\n  return Hotkey;\n}(AbstractPureComponent);\nexport { Hotkey };","map":{"version":3,"names":["classNames","React","AbstractPureComponent","Classes","DISPLAYNAME_PREFIX","KeyComboTag","Hotkey","_super","__extends","prototype","render","_a","props","label","className","spreadableProps","__rest","rootClasses","HOTKEY","createElement","HOTKEY_LABEL","__assign","validateProps","global","group","console","error","displayName","concat","defaultProps","allowInInput","disabled","preventDefault","stopPropagation"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/components/hotkeys/hotkey.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent, Classes, DISPLAYNAME_PREFIX, Props } from \"../../common\";\nimport { HotkeyConfig } from \"../../hooks\";\nimport { KeyComboTag } from \"./keyComboTag\";\n\nexport type HotkeyProps = Props & HotkeyConfig;\n\n/**\n * Hotkey component used to display a hotkey in the HotkeysDialog.\n * Should not be used by consumers directly.\n */\nexport class Hotkey extends AbstractPureComponent<HotkeyProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Hotkey`;\n\n    public static defaultProps = {\n        allowInInput: false,\n        disabled: false,\n        global: false,\n        preventDefault: false,\n        stopPropagation: false,\n    };\n\n    public render() {\n        const { label, className, ...spreadableProps } = this.props;\n\n        const rootClasses = classNames(Classes.HOTKEY, className);\n        return (\n            <div className={rootClasses}>\n                <div className={Classes.HOTKEY_LABEL}>{label}</div>\n                <KeyComboTag {...spreadableProps} />\n            </div>\n        );\n    }\n\n    protected validateProps(props: HotkeyProps) {\n        if (props.global !== true && props.group == null) {\n            console.error(\"non-global Hotkeys must define a group\");\n        }\n    }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,qBAAqB,EAAEC,OAAO,EAAEC,kBAAkB,QAAe,cAAc;AAExF,SAASC,WAAW,QAAQ,eAAe;AAI3C;;;;AAIA,IAAAC,MAAA,0BAAAC,MAAA;EAA4BC,SAAA,CAAAF,MAAA,EAAAC,MAAA;EAA5B,SAAAD,OAAA;;EA4BA;EAjBWA,MAAA,CAAAG,SAAA,CAAAC,MAAM,GAAb;IACI,IAAMC,EAAA,GAA2C,IAAI,CAACC,KAAK;MAAnDC,KAAK,GAAAF,EAAA,CAAAE,KAAA;MAAEC,SAAS,GAAAH,EAAA,CAAAG,SAAA;MAAKC,eAAe,GAAAC,MAAA,CAAAL,EAAA,EAAtC,sBAAwC,CAAa;IAE3D,IAAMM,WAAW,GAAGjB,UAAU,CAACG,OAAO,CAACe,MAAM,EAAEJ,SAAS,CAAC;IACzD,OACIb,KAAA,CAAAkB,aAAA;MAAKL,SAAS,EAAEG;IAAW,GACvBhB,KAAA,CAAAkB,aAAA;MAAKL,SAAS,EAAEX,OAAO,CAACiB;IAAY,GAAGP,KAAK,CAAO,EACnDZ,KAAA,CAAAkB,aAAA,CAACd,WAAW,EAAAgB,QAAA,KAAKN,eAAe,EAAI,CAClC;EAEd,CAAC;EAEST,MAAA,CAAAG,SAAA,CAAAa,aAAa,GAAvB,UAAwBV,KAAkB;IACtC,IAAIA,KAAK,CAACW,MAAM,KAAK,IAAI,IAAIX,KAAK,CAACY,KAAK,IAAI,IAAI,EAAE;MAC9CC,OAAO,CAACC,KAAK,CAAC,wCAAwC,CAAC;;EAE/D,CAAC;EA1BapB,MAAA,CAAAqB,WAAW,GAAG,GAAAC,MAAA,CAAGxB,kBAAkB,YAAS;EAE5CE,MAAA,CAAAuB,YAAY,GAAG;IACzBC,YAAY,EAAE,KAAK;IACnBC,QAAQ,EAAE,KAAK;IACfR,MAAM,EAAE,KAAK;IACbS,cAAc,EAAE,KAAK;IACrBC,eAAe,EAAE;GACpB;EAmBL,OAAA3B,MAAC;CAAA,CA5B2BJ,qBAAqB;SAApCI,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}