{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\n/**\n * @fileoverview This component is DEPRECATED, and the code is frozen.\n * All changes & bugfixes should be made to HotkeysTarget2 instead.\n */\n/* eslint-disable deprecation/deprecation */\nimport * as React from \"react\";\nimport { isFunction } from \"../common/utils\";\nimport { HotkeyScope, HotkeysEvents } from \"./hotkeysEvents\";\nimport { getDisplayName } from \"./legacyCommon\";\nvar HOTKEYS_WARN_DECORATOR_NO_METHOD = \"[Blueprint] @HotkeysTargetLegacy-decorated class should implement renderHotkeys.\";\nvar HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT = \"[Blueprint] \\\"@HotkeysTargetLegacy-decorated components must return a single JSX.Element or an empty render.\";\n/** @deprecated use `useHotkeys` hook or `<HotkeysTarget2>` component */\nexport function HotkeysTargetLegacy(WrappedComponent) {\n  var _a;\n  if (!isFunction(WrappedComponent.prototype.renderHotkeys)) {\n    console.warn(HOTKEYS_WARN_DECORATOR_NO_METHOD);\n  }\n  return _a = /** @class */function (_super) {\n    __extends(HotkeysTargetClass, _super);\n    function HotkeysTargetClass() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n      /** @internal */\n      _this.globalHotkeysEvents = new HotkeysEvents(HotkeyScope.GLOBAL);\n      /** @internal */\n      _this.localHotkeysEvents = new HotkeysEvents(HotkeyScope.LOCAL);\n      return _this;\n    }\n    HotkeysTargetClass.prototype.componentDidMount = function () {\n      if (_super.prototype.componentDidMount != null) {\n        _super.prototype.componentDidMount.call(this);\n      }\n      // attach global key event listeners\n      document.addEventListener(\"keydown\", this.globalHotkeysEvents.handleKeyDown);\n      document.addEventListener(\"keyup\", this.globalHotkeysEvents.handleKeyUp);\n    };\n    HotkeysTargetClass.prototype.componentWillUnmount = function () {\n      var _a;\n      (_a = _super.prototype.componentWillUnmount) === null || _a === void 0 ? void 0 : _a.call(this);\n      document.removeEventListener(\"keydown\", this.globalHotkeysEvents.handleKeyDown);\n      document.removeEventListener(\"keyup\", this.globalHotkeysEvents.handleKeyUp);\n      this.globalHotkeysEvents.clear();\n      this.localHotkeysEvents.clear();\n    };\n    HotkeysTargetClass.prototype.render = function () {\n      var _this = this;\n      var element = _super.prototype.render.call(this);\n      if (element == null) {\n        // always return `element` in case caller is distinguishing between `null` and `undefined`\n        return element;\n      }\n      if (!React.isValidElement(element)) {\n        console.warn(HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT);\n        return element;\n      }\n      if (isFunction(this.renderHotkeys)) {\n        var hotkeys = this.renderHotkeys();\n        if (this.localHotkeysEvents) {\n          this.localHotkeysEvents.setHotkeys(hotkeys.props);\n        }\n        if (this.globalHotkeysEvents) {\n          this.globalHotkeysEvents.setHotkeys(hotkeys.props);\n        }\n        if (this.localHotkeysEvents.count() > 0) {\n          var tabIndex = hotkeys.props.tabIndex === undefined ? 0 : hotkeys.props.tabIndex;\n          var _a = element.props,\n            existingKeyDown_1 = _a.onKeyDown,\n            existingKeyUp_1 = _a.onKeyUp;\n          var handleKeyDownWrapper = function (e) {\n            _this.localHotkeysEvents.handleKeyDown(e.nativeEvent);\n            existingKeyDown_1 === null || existingKeyDown_1 === void 0 ? void 0 : existingKeyDown_1(e);\n          };\n          var handleKeyUpWrapper = function (e) {\n            _this.localHotkeysEvents.handleKeyUp(e.nativeEvent);\n            existingKeyUp_1 === null || existingKeyUp_1 === void 0 ? void 0 : existingKeyUp_1(e);\n          };\n          return React.cloneElement(element, {\n            onKeyDown: handleKeyDownWrapper,\n            onKeyUp: handleKeyUpWrapper,\n            tabIndex: tabIndex\n          });\n        }\n      }\n      return element;\n    };\n    return HotkeysTargetClass;\n  }(WrappedComponent), _a.displayName = \"HotkeysTarget(\".concat(getDisplayName(WrappedComponent), \")\"), _a;\n}","map":{"version":3,"names":["React","isFunction","HotkeyScope","HotkeysEvents","getDisplayName","HOTKEYS_WARN_DECORATOR_NO_METHOD","HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT","HotkeysTargetLegacy","WrappedComponent","prototype","renderHotkeys","console","warn","_a","_super","__extends","HotkeysTargetClass","_this","apply","arguments","globalHotkeysEvents","GLOBAL","localHotkeysEvents","LOCAL","componentDidMount","call","document","addEventListener","handleKeyDown","handleKeyUp","componentWillUnmount","removeEventListener","clear","render","element","isValidElement","hotkeys","setHotkeys","props","count","tabIndex","undefined","existingKeyDown_1","onKeyDown","existingKeyUp_1","onKeyUp","handleKeyDownWrapper","e","nativeEvent","handleKeyUpWrapper","cloneElement","displayName","concat"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/legacy/hotkeysTargetLegacy.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This component is DEPRECATED, and the code is frozen.\n * All changes & bugfixes should be made to HotkeysTarget2 instead.\n */\n\n/* eslint-disable deprecation/deprecation */\n\nimport * as React from \"react\";\n\nimport { isFunction } from \"../common/utils\";\nimport { HotkeysProps } from \"../components/hotkeys\";\nimport { HotkeyScope, HotkeysEvents } from \"./hotkeysEvents\";\nimport { Constructor, getDisplayName } from \"./legacyCommon\";\n\nconst HOTKEYS_WARN_DECORATOR_NO_METHOD = `[Blueprint] @HotkeysTargetLegacy-decorated class should implement renderHotkeys.`;\nconst HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT = `[Blueprint] \"@HotkeysTargetLegacy-decorated components must return a single JSX.Element or an empty render.`;\n\nexport interface HotkeysTargetLegacyComponent extends React.Component {\n    /** Components decorated with the `@HotkeysTargetLegacy` decorator must implement React's component `render` function. */\n    render(): React.ReactElement<any> | null | undefined;\n\n    /**\n     * Components decorated with the `@HotkeysTargetLegacy` decorator must implement\n     * this method, and it must return a `Hotkeys` React element.\n     */\n    renderHotkeys: () => React.ReactElement<HotkeysProps>;\n}\n\n/** @deprecated use `useHotkeys` hook or `<HotkeysTarget2>` component */\nexport function HotkeysTargetLegacy<T extends Constructor<HotkeysTargetLegacyComponent>>(WrappedComponent: T) {\n    if (!isFunction(WrappedComponent.prototype.renderHotkeys)) {\n        console.warn(HOTKEYS_WARN_DECORATOR_NO_METHOD);\n    }\n\n    return class HotkeysTargetClass extends WrappedComponent {\n        public static displayName = `HotkeysTarget(${getDisplayName(WrappedComponent)})`;\n\n        /** @internal */\n        public globalHotkeysEvents: HotkeysEvents = new HotkeysEvents(HotkeyScope.GLOBAL);\n\n        /** @internal */\n        public localHotkeysEvents: HotkeysEvents = new HotkeysEvents(HotkeyScope.LOCAL);\n\n        public componentDidMount() {\n            if (super.componentDidMount != null) {\n                super.componentDidMount();\n            }\n\n            // attach global key event listeners\n            document.addEventListener(\"keydown\", this.globalHotkeysEvents.handleKeyDown);\n            document.addEventListener(\"keyup\", this.globalHotkeysEvents.handleKeyUp);\n        }\n\n        public componentWillUnmount() {\n            super.componentWillUnmount?.();\n            document.removeEventListener(\"keydown\", this.globalHotkeysEvents.handleKeyDown);\n            document.removeEventListener(\"keyup\", this.globalHotkeysEvents.handleKeyUp);\n\n            this.globalHotkeysEvents.clear();\n            this.localHotkeysEvents.clear();\n        }\n\n        public render() {\n            const element = super.render() as JSX.Element;\n\n            if (element == null) {\n                // always return `element` in case caller is distinguishing between `null` and `undefined`\n                return element;\n            }\n\n            if (!React.isValidElement<any>(element)) {\n                console.warn(HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT);\n                return element;\n            }\n\n            if (isFunction(this.renderHotkeys)) {\n                const hotkeys = this.renderHotkeys();\n                if (this.localHotkeysEvents) {\n                    this.localHotkeysEvents.setHotkeys(hotkeys.props);\n                }\n                if (this.globalHotkeysEvents) {\n                    this.globalHotkeysEvents.setHotkeys(hotkeys.props);\n                }\n\n                if (this.localHotkeysEvents.count() > 0) {\n                    const tabIndex = hotkeys.props.tabIndex === undefined ? 0 : hotkeys.props.tabIndex;\n\n                    const { onKeyDown: existingKeyDown, onKeyUp: existingKeyUp } = element.props;\n\n                    const handleKeyDownWrapper = (e: React.KeyboardEvent<HTMLElement>) => {\n                        this.localHotkeysEvents.handleKeyDown(e.nativeEvent as KeyboardEvent);\n                        existingKeyDown?.(e);\n                    };\n\n                    const handleKeyUpWrapper = (e: React.KeyboardEvent<HTMLElement>) => {\n                        this.localHotkeysEvents.handleKeyUp(e.nativeEvent as KeyboardEvent);\n                        existingKeyUp?.(e);\n                    };\n                    return React.cloneElement(element, {\n                        onKeyDown: handleKeyDownWrapper,\n                        onKeyUp: handleKeyUpWrapper,\n                        tabIndex,\n                    });\n                }\n            }\n            return element;\n        }\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}