{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport * as React from \"react\";\nimport { AbstractPureComponent, Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { isElementOfType } from \"../../common/utils\";\nimport { Radio } from \"./controls\";\nvar counter = 0;\nfunction nextName() {\n  return \"\".concat(RadioGroup.displayName, \"-\").concat(counter++);\n}\n/**\n * Radio group component.\n *\n * @see https://blueprintjs.com/docs/#core/components/radio.radiogroup\n */\nvar RadioGroup = /** @class */function (_super) {\n  __extends(RadioGroup, _super);\n  function RadioGroup() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    // a unique name for this group, which can be overridden by `name` prop.\n    _this.autoGroupName = nextName();\n    return _this;\n  }\n  RadioGroup.prototype.render = function () {\n    var label = this.props.label;\n    return React.createElement(\"div\", {\n      className: this.props.className\n    }, label == null ? null : React.createElement(\"label\", {\n      className: Classes.LABEL\n    }, label), Array.isArray(this.props.options) ? this.renderOptions() : this.renderChildren());\n  };\n  RadioGroup.prototype.validateProps = function () {\n    if (this.props.children != null && this.props.options != null) {\n      console.warn(Errors.RADIOGROUP_WARN_CHILDREN_OPTIONS_MUTEX);\n    }\n  };\n  RadioGroup.prototype.renderChildren = function () {\n    var _this = this;\n    return React.Children.map(this.props.children, function (child) {\n      if (isElementOfType(child, Radio)) {\n        return React.cloneElement(child, _this.getRadioProps(child.props));\n      } else {\n        return child;\n      }\n    });\n  };\n  RadioGroup.prototype.renderOptions = function () {\n    var _this = this;\n    var _a;\n    return (_a = this.props.options) === null || _a === void 0 ? void 0 : _a.map(function (option) {\n      return React.createElement(Radio, __assign({}, _this.getRadioProps(option), {\n        key: option.value,\n        labelElement: option.label || option.value\n      }));\n    });\n  };\n  RadioGroup.prototype.getRadioProps = function (optionProps) {\n    var name = this.props.name;\n    var className = optionProps.className,\n      disabled = optionProps.disabled,\n      value = optionProps.value;\n    return {\n      checked: value === this.props.selectedValue,\n      className: className,\n      disabled: disabled || this.props.disabled,\n      inline: this.props.inline,\n      name: name == null ? this.autoGroupName : name,\n      onChange: this.props.onChange,\n      value: value\n    };\n  };\n  RadioGroup.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".RadioGroup\");\n  return RadioGroup;\n}(AbstractPureComponent);\nexport { RadioGroup };","map":{"version":3,"names":["React","AbstractPureComponent","Classes","DISPLAYNAME_PREFIX","Errors","isElementOfType","Radio","counter","nextName","concat","RadioGroup","displayName","_super","__extends","_this","apply","arguments","autoGroupName","prototype","render","label","props","createElement","className","LABEL","Array","isArray","options","renderOptions","renderChildren","validateProps","children","console","warn","RADIOGROUP_WARN_CHILDREN_OPTIONS_MUTEX","Children","map","child","cloneElement","getRadioProps","_a","option","__assign","key","value","labelElement","optionProps","name","disabled","checked","selectedValue","inline","onChange"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/components/forms/radioGroup.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nimport { AbstractPureComponent, Classes, DISPLAYNAME_PREFIX, OptionProps, Props } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { isElementOfType } from \"../../common/utils\";\nimport { Radio, RadioProps } from \"./controls\";\n\nexport interface RadioGroupProps extends Props {\n    /**\n     * Radio elements. This prop is mutually exclusive with `options`.\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Whether the group and _all_ its radios are disabled.\n     * Individual radios can be disabled using their `disabled` prop.\n     */\n    disabled?: boolean;\n\n    /**\n     * Whether the radio buttons are to be displayed inline horizontally.\n     */\n    inline?: boolean;\n\n    /** Optional label text to display above the radio buttons. */\n    label?: React.ReactNode;\n\n    /**\n     * Name of the group, used to link radio buttons together in HTML.\n     * If omitted, a unique name will be generated internally.\n     */\n    name?: string;\n\n    /**\n     * Callback invoked when the currently selected radio changes.\n     * Use `event.currentTarget.value` to read the currently selected value.\n     * This prop is required because this component only supports controlled usage.\n     */\n    onChange: (event: React.FormEvent<HTMLInputElement>) => void;\n\n    /**\n     * Array of options to render in the group. This prop is mutually exclusive\n     * with `children`: either provide an array of `OptionProps` objects or\n     * provide `<Radio>` children elements.\n     */\n    options?: readonly OptionProps[];\n\n    /** Value of the selected radio. The child with this value will be `:checked`. */\n    selectedValue?: string | number;\n}\n\nlet counter = 0;\nfunction nextName() {\n    return `${RadioGroup.displayName}-${counter++}`;\n}\n\n/**\n * Radio group component.\n *\n * @see https://blueprintjs.com/docs/#core/components/radio.radiogroup\n */\nexport class RadioGroup extends AbstractPureComponent<RadioGroupProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.RadioGroup`;\n\n    // a unique name for this group, which can be overridden by `name` prop.\n    private autoGroupName = nextName();\n\n    public render() {\n        const { label } = this.props;\n        return (\n            <div className={this.props.className}>\n                {label == null ? null : <label className={Classes.LABEL}>{label}</label>}\n                {Array.isArray(this.props.options) ? this.renderOptions() : this.renderChildren()}\n            </div>\n        );\n    }\n\n    protected validateProps() {\n        if (this.props.children != null && this.props.options != null) {\n            console.warn(Errors.RADIOGROUP_WARN_CHILDREN_OPTIONS_MUTEX);\n        }\n    }\n\n    private renderChildren() {\n        return React.Children.map(this.props.children, child => {\n            if (isElementOfType(child, Radio)) {\n                return React.cloneElement(child, this.getRadioProps(child.props as OptionProps));\n            } else {\n                return child;\n            }\n        });\n    }\n\n    private renderOptions() {\n        return this.props.options?.map(option => (\n            <Radio {...this.getRadioProps(option)} key={option.value} labelElement={option.label || option.value} />\n        ));\n    }\n\n    private getRadioProps(optionProps: OptionProps): RadioProps {\n        const { name } = this.props;\n        const { className, disabled, value } = optionProps;\n        return {\n            checked: value === this.props.selectedValue,\n            className,\n            disabled: disabled || this.props.disabled,\n            inline: this.props.inline,\n            name: name == null ? this.autoGroupName : name,\n            onChange: this.props.onChange,\n            value,\n        };\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}