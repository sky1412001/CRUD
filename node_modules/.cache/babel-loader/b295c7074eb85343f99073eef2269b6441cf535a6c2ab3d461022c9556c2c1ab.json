{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __awaiter, __generator } from \"tslib\";\n/** Returns whether bundler-injected variable `NODE_ENV` equals `env`. */\nfunction isNodeEnv(env) {\n  return typeof NODE_ENV !== \"undefined\" && NODE_ENV === env;\n}\n/**\n * Wraps an async task with a performance timer. Only logs to console in development.\n */\nexport function wrapWithTimer(taskDescription, task) {\n  return __awaiter(this, void 0, void 0, function () {\n    var shouldMeasure, start, time;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          shouldMeasure = isNodeEnv(\"development\") && typeof performance !== \"undefined\";\n          /* eslint-disable no-console */\n          if (shouldMeasure) {\n            start = performance.now();\n            console.info(\"Started '\".concat(taskDescription, \"'...\"));\n          }\n          return [4 /*yield*/, task()];\n        case 1:\n          _a.sent();\n          if (shouldMeasure) {\n            time = Math.round(performance.now() - start);\n            console.info(\"Finished '\".concat(taskDescription, \"' in \").concat(time, \"ms\"));\n          }\n          return [2 /*return*/];\n      }\n    });\n  });\n}","map":{"version":3,"names":["isNodeEnv","env","NODE_ENV","wrapWithTimer","taskDescription","task","shouldMeasure","performance","start","now","console","info","concat","_a","sent","time","Math","round"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/icons/src/loaderUtils.ts"],"sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// injected by webpack.DefinePlugin\ndeclare let NODE_ENV: string;\n\n/** Returns whether bundler-injected variable `NODE_ENV` equals `env`. */\nfunction isNodeEnv(env: string) {\n    return typeof NODE_ENV !== \"undefined\" && NODE_ENV === env;\n}\n\n/**\n * Wraps an async task with a performance timer. Only logs to console in development.\n */\nexport async function wrapWithTimer(taskDescription: string, task: () => Promise<void>) {\n    const shouldMeasure = isNodeEnv(\"development\") && typeof performance !== \"undefined\";\n    let start: number;\n\n    /* eslint-disable no-console */\n    if (shouldMeasure) {\n        start = performance.now();\n        console.info(`Started '${taskDescription}'...`);\n    }\n\n    await task();\n\n    if (shouldMeasure) {\n        const time = Math.round(performance.now() - start!);\n        console.info(`Finished '${taskDescription}' in ${time}ms`);\n    }\n    return;\n    /* eslint-enable no-console */\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAmBA;AACA,SAASA,SAASA,CAACC,GAAW;EAC1B,OAAO,OAAOC,QAAQ,KAAK,WAAW,IAAIA,QAAQ,KAAKD,GAAG;AAC9D;AAEA;;;AAGA,OAAM,SAAgBE,aAAaA,CAACC,eAAuB,EAAEC,IAAyB;;;;;;UAC5EC,aAAa,GAAGN,SAAS,CAAC,aAAa,CAAC,IAAI,OAAOO,WAAW,KAAK,WAAW;UAGpF;UACA,IAAID,aAAa,EAAE;YACfE,KAAK,GAAGD,WAAW,CAACE,GAAG,EAAE;YACzBC,OAAO,CAACC,IAAI,CAAC,YAAAC,MAAA,CAAYR,eAAe,SAAM,CAAC;;UAGnD,qBAAMC,IAAI,EAAE;;UAAZQ,EAAA,CAAAC,IAAA,EAAY;UAEZ,IAAIR,aAAa,EAAE;YACTS,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACV,WAAW,CAACE,GAAG,EAAE,GAAGD,KAAM,CAAC;YACnDE,OAAO,CAACC,IAAI,CAAC,aAAAC,MAAA,CAAaR,eAAe,WAAAQ,MAAA,CAAQG,IAAI,OAAI,CAAC;;UAE9D"},"metadata":{},"sourceType":"module","externalDependencies":[]}