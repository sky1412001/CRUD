{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { IconSize, SmallCross } from \"@blueprintjs/icons\";\nimport { AbstractPureComponent, Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { uniqueId } from \"../../common/utils\";\nimport { Button } from \"../button/buttons\";\nimport { H6 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\nimport { Overlay } from \"../overlay/overlay\";\n/**\n * Dialog component.\n *\n * @see https://blueprintjs.com/docs/#core/components/dialog\n */\nvar Dialog = /** @class */function (_super) {\n  __extends(Dialog, _super);\n  function Dialog(props) {\n    var _this = _super.call(this, props) || this;\n    var id = uniqueId(\"bp-dialog\");\n    _this.titleId = \"title-\".concat(id);\n    return _this;\n  }\n  Dialog.prototype.render = function () {\n    return React.createElement(Overlay, __assign({}, this.props, {\n      className: Classes.OVERLAY_SCROLL_CONTAINER,\n      hasBackdrop: true\n    }), React.createElement(\"div\", {\n      className: Classes.DIALOG_CONTAINER,\n      ref: this.props.containerRef\n    }, React.createElement(\"div\", {\n      className: classNames(Classes.DIALOG, this.props.className),\n      role: \"dialog\",\n      \"aria-labelledby\": this.props[\"aria-labelledby\"] || (this.props.title ? this.titleId : undefined),\n      \"aria-describedby\": this.props[\"aria-describedby\"],\n      style: this.props.style\n    }, this.maybeRenderHeader(), this.props.children)));\n  };\n  Dialog.prototype.validateProps = function (props) {\n    if (props.title == null) {\n      if (props.icon != null) {\n        console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON);\n      }\n      if (props.isCloseButtonShown != null) {\n        console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);\n      }\n    }\n  };\n  Dialog.prototype.maybeRenderCloseButton = function () {\n    // show close button if prop is undefined or null\n    // this gives us a behavior as if the default value were `true`\n    if (this.props.isCloseButtonShown !== false) {\n      return React.createElement(Button, {\n        \"aria-label\": \"Close\",\n        className: Classes.DIALOG_CLOSE_BUTTON,\n        icon: React.createElement(SmallCross, {\n          size: IconSize.STANDARD\n        }),\n        minimal: true,\n        onClick: this.props.onClose\n      });\n    } else {\n      return undefined;\n    }\n  };\n  Dialog.prototype.maybeRenderHeader = function () {\n    var _a = this.props,\n      icon = _a.icon,\n      title = _a.title;\n    if (title == null) {\n      return undefined;\n    }\n    return React.createElement(\"div\", {\n      className: Classes.DIALOG_HEADER\n    }, React.createElement(Icon, {\n      icon: icon,\n      size: IconSize.STANDARD,\n      \"aria-hidden\": true,\n      tabIndex: -1\n    }), React.createElement(H6, {\n      id: this.titleId\n    }, title), this.maybeRenderCloseButton());\n  };\n  Dialog.defaultProps = {\n    canOutsideClickClose: true,\n    isOpen: false\n  };\n  Dialog.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Dialog\");\n  return Dialog;\n}(AbstractPureComponent);\nexport { Dialog };","map":{"version":3,"names":["classNames","React","IconSize","SmallCross","AbstractPureComponent","Classes","DISPLAYNAME_PREFIX","Errors","uniqueId","Button","H6","Icon","Overlay","Dialog","_super","__extends","props","_this","call","id","titleId","concat","prototype","render","createElement","__assign","className","OVERLAY_SCROLL_CONTAINER","hasBackdrop","DIALOG_CONTAINER","ref","containerRef","DIALOG","role","title","undefined","style","maybeRenderHeader","children","validateProps","icon","console","warn","DIALOG_WARN_NO_HEADER_ICON","isCloseButtonShown","DIALOG_WARN_NO_HEADER_CLOSE_BUTTON","maybeRenderCloseButton","DIALOG_CLOSE_BUTTON","size","STANDARD","minimal","onClick","onClose","_a","DIALOG_HEADER","tabIndex","defaultProps","canOutsideClickClose","isOpen","displayName"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/components/dialog/dialog.tsx"],"sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { IconName, IconSize, SmallCross } from \"@blueprintjs/icons\";\n\nimport { AbstractPureComponent, Classes, DISPLAYNAME_PREFIX, MaybeElement, Props } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { uniqueId } from \"../../common/utils\";\nimport { Button } from \"../button/buttons\";\nimport { H6 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\nimport { BackdropProps, Overlay, OverlayableProps } from \"../overlay/overlay\";\n\nexport interface DialogProps extends OverlayableProps, BackdropProps, Props {\n    /** Dialog contents. */\n    children?: React.ReactNode;\n\n    /**\n     * Toggles the visibility of the overlay and its children.\n     * This prop is required because the component is controlled.\n     */\n    isOpen: boolean;\n\n    /**\n     * Dialog always has a backdrop so this prop is excluded from the public API.\n     *\n     * @internal\n     */\n    hasBackdrop?: boolean;\n\n    /**\n     * Name of a Blueprint UI icon (or an icon element) to render in the\n     * dialog's header. Note that the header will only be rendered if `title` is\n     * provided.\n     */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Whether to show the close button in the dialog's header.\n     * Note that the header will only be rendered if `title` is provided.\n     *\n     * @default true\n     */\n    isCloseButtonShown?: boolean;\n\n    /**\n     * CSS styles to apply to the dialog.\n     *\n     * @default {}\n     */\n    style?: React.CSSProperties;\n\n    /**\n     * Title of the dialog. If provided, an element with `Classes.DIALOG_HEADER`\n     * will be rendered inside the dialog before any children elements.\n     */\n    title?: React.ReactNode;\n\n    /**\n     * Name of the transition for internal `CSSTransition`. Providing your own\n     * name here will require defining new CSS transition properties.\n     */\n    transitionName?: string;\n\n    /**\n     * Ref supplied to the `Classes.DIALOG_CONTAINER` element.\n     */\n    containerRef?: React.Ref<HTMLDivElement>;\n\n    /**\n     * ID of the element that contains title or label text for this dialog.\n     *\n     * By default, if the `title` prop is supplied, this component will generate\n     * a unique ID for the `<H5>` title element and use that ID here.\n     */\n    \"aria-labelledby\"?: string;\n\n    /**\n     * ID of an element that contains description text inside this dialog.\n     */\n    \"aria-describedby\"?: string;\n}\n\n/**\n * Dialog component.\n *\n * @see https://blueprintjs.com/docs/#core/components/dialog\n */\nexport class Dialog extends AbstractPureComponent<DialogProps> {\n    public static defaultProps: DialogProps = {\n        canOutsideClickClose: true,\n        isOpen: false,\n    };\n\n    private titleId: string;\n\n    public static displayName = `${DISPLAYNAME_PREFIX}.Dialog`;\n\n    public constructor(props: DialogProps) {\n        super(props);\n\n        const id = uniqueId(\"bp-dialog\");\n        this.titleId = `title-${id}`;\n    }\n\n    public render() {\n        return (\n            <Overlay {...this.props} className={Classes.OVERLAY_SCROLL_CONTAINER} hasBackdrop={true}>\n                <div className={Classes.DIALOG_CONTAINER} ref={this.props.containerRef}>\n                    <div\n                        className={classNames(Classes.DIALOG, this.props.className)}\n                        role=\"dialog\"\n                        aria-labelledby={this.props[\"aria-labelledby\"] || (this.props.title ? this.titleId : undefined)}\n                        aria-describedby={this.props[\"aria-describedby\"]}\n                        style={this.props.style}\n                    >\n                        {this.maybeRenderHeader()}\n                        {this.props.children}\n                    </div>\n                </div>\n            </Overlay>\n        );\n    }\n\n    protected validateProps(props: DialogProps) {\n        if (props.title == null) {\n            if (props.icon != null) {\n                console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON);\n            }\n            if (props.isCloseButtonShown != null) {\n                console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);\n            }\n        }\n    }\n\n    private maybeRenderCloseButton() {\n        // show close button if prop is undefined or null\n        // this gives us a behavior as if the default value were `true`\n        if (this.props.isCloseButtonShown !== false) {\n            return (\n                <Button\n                    aria-label=\"Close\"\n                    className={Classes.DIALOG_CLOSE_BUTTON}\n                    icon={<SmallCross size={IconSize.STANDARD} />}\n                    minimal={true}\n                    onClick={this.props.onClose}\n                />\n            );\n        } else {\n            return undefined;\n        }\n    }\n\n    private maybeRenderHeader() {\n        const { icon, title } = this.props;\n        if (title == null) {\n            return undefined;\n        }\n        return (\n            <div className={Classes.DIALOG_HEADER}>\n                <Icon icon={icon} size={IconSize.STANDARD} aria-hidden={true} tabIndex={-1} />\n                <H6 id={this.titleId}>{title}</H6>\n                {this.maybeRenderCloseButton()}\n            </div>\n        );\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}