{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign } from \"tslib\";\n/**\n * @fileoverview This component is DEPRECATED, and the code is frozen.\n * All changes & bugfixes should be made to HotkeysDialog2 instead.\n */\n/* eslint-disable deprecation/deprecation */\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Classes } from \"../common\";\nimport { Dialog, Hotkey, Hotkeys } from \"../components\";\n/**\n * The delay before showing or hiding the dialog. Should be long enough to\n * allow all registered hotkey listeners to execute first.\n */\nvar DELAY_IN_MS = 10;\n/** @deprecated use HotkeysDialog2 */\nvar HotkeysDialogLegacy = /** @class */function () {\n  function HotkeysDialogLegacy() {\n    var _this = this;\n    this.componentProps = {\n      globalHotkeysGroup: \"Global hotkeys\"\n    };\n    this.container = null;\n    this.hotkeysQueue = [];\n    this.isDialogShowing = false;\n    this.show = function () {\n      _this.isDialogShowing = true;\n      _this.render();\n    };\n    this.hide = function () {\n      _this.isDialogShowing = false;\n      _this.render();\n    };\n  }\n  HotkeysDialogLegacy.prototype.render = function () {\n    if (this.container == null) {\n      this.container = this.getContainer();\n    }\n    ReactDOM.render(this.renderComponent(), this.container);\n  };\n  HotkeysDialogLegacy.prototype.unmount = function () {\n    if (this.container != null) {\n      ReactDOM.unmountComponentAtNode(this.container);\n      this.container.remove();\n      this.container = null;\n    }\n  };\n  /**\n   * Because hotkeys can be registered globally and locally and because\n   * event ordering cannot be guaranteed, we use this debouncing method to\n   * allow all hotkey listeners to fire and add their hotkeys to the dialog.\n   *\n   * 10msec after the last listener adds their hotkeys, we render the dialog\n   * and clear the queue.\n   */\n  HotkeysDialogLegacy.prototype.enqueueHotkeysForDisplay = function (hotkeys) {\n    this.hotkeysQueue.push(hotkeys);\n    // reset timeout for debounce\n    window.clearTimeout(this.showTimeoutToken);\n    this.showTimeoutToken = window.setTimeout(this.show, DELAY_IN_MS);\n  };\n  HotkeysDialogLegacy.prototype.hideAfterDelay = function () {\n    window.clearTimeout(this.hideTimeoutToken);\n    this.hideTimeoutToken = window.setTimeout(this.hide, DELAY_IN_MS);\n  };\n  HotkeysDialogLegacy.prototype.isShowing = function () {\n    return this.isDialogShowing;\n  };\n  HotkeysDialogLegacy.prototype.getContainer = function () {\n    if (this.container == null) {\n      this.container = document.createElement(\"div\");\n      this.container.classList.add(Classes.PORTAL);\n      document.body.appendChild(this.container);\n    }\n    return this.container;\n  };\n  HotkeysDialogLegacy.prototype.renderComponent = function () {\n    return React.createElement(Dialog, __assign({}, this.componentProps, {\n      className: classNames(Classes.HOTKEY_DIALOG, this.componentProps.className),\n      isOpen: this.isDialogShowing,\n      onClose: this.hide\n    }), React.createElement(\"div\", {\n      className: Classes.DIALOG_BODY\n    }, this.renderHotkeys()));\n  };\n  HotkeysDialogLegacy.prototype.renderHotkeys = function () {\n    var _this = this;\n    var hotkeys = this.emptyHotkeyQueue();\n    var elements = hotkeys.map(function (hotkey, index) {\n      var group = hotkey.global === true && hotkey.group == null ? _this.componentProps.globalHotkeysGroup : hotkey.group;\n      return React.createElement(Hotkey, __assign({\n        key: index\n      }, hotkey, {\n        group: group\n      }));\n    });\n    return React.createElement(Hotkeys, null, elements);\n  };\n  HotkeysDialogLegacy.prototype.emptyHotkeyQueue = function () {\n    // flatten then empty the hotkeys queue\n    var hotkeys = this.hotkeysQueue.reduce(function (arr, queued) {\n      return arr.concat(queued);\n    }, []);\n    this.hotkeysQueue.length = 0;\n    return hotkeys;\n  };\n  return HotkeysDialogLegacy;\n}();\n// singleton instance\nvar HOTKEYS_DIALOG = new HotkeysDialogLegacy();\n/** @deprecated use HotkeysProvider */\nexport function isHotkeysDialogShowing() {\n  return HOTKEYS_DIALOG.isShowing();\n}\n/** @deprecated use HotkeysProvider */\nexport function setHotkeysDialogProps(props) {\n  for (var key in props) {\n    if (props.hasOwnProperty(key)) {\n      HOTKEYS_DIALOG.componentProps[key] = props[key];\n    }\n  }\n}\n/** @deprecated use HotkeysProvider */\nexport function showHotkeysDialog(hotkeys) {\n  HOTKEYS_DIALOG.enqueueHotkeysForDisplay(hotkeys);\n}\n/** @deprecated use HotkeysProvider */\nexport function hideHotkeysDialog() {\n  HOTKEYS_DIALOG.hide();\n}\n/**\n * Use this function instead of `hideHotkeysDialog` if you need to ensure that all hotkey listeners\n * have time to execute with the dialog in a consistent open state. This can avoid flickering the\n * dialog between open and closedÂ states as successive listeners fire.\n *\n * @deprecated use HotkeysProvider\n */\nexport function hideHotkeysDialogAfterDelay() {\n  HOTKEYS_DIALOG.hideAfterDelay();\n}","map":{"version":3,"names":["classNames","React","ReactDOM","Classes","Dialog","Hotkey","Hotkeys","DELAY_IN_MS","HotkeysDialogLegacy","_this","componentProps","globalHotkeysGroup","container","hotkeysQueue","isDialogShowing","show","render","hide","prototype","getContainer","renderComponent","unmount","unmountComponentAtNode","remove","enqueueHotkeysForDisplay","hotkeys","push","window","clearTimeout","showTimeoutToken","setTimeout","hideAfterDelay","hideTimeoutToken","isShowing","document","createElement","classList","add","PORTAL","body","appendChild","__assign","className","HOTKEY_DIALOG","isOpen","onClose","DIALOG_BODY","renderHotkeys","emptyHotkeyQueue","elements","map","hotkey","index","group","global","key","reduce","arr","queued","concat","length","HOTKEYS_DIALOG","isHotkeysDialogShowing","setHotkeysDialogProps","props","hasOwnProperty","showHotkeysDialog","hideHotkeysDialog","hideHotkeysDialogAfterDelay"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/legacy/hotkeysDialogLegacy.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This component is DEPRECATED, and the code is frozen.\n * All changes & bugfixes should be made to HotkeysDialog2 instead.\n */\n\n/* eslint-disable deprecation/deprecation */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { Classes } from \"../common\";\nimport { Dialog, DialogProps, Hotkey, HotkeyProps, Hotkeys } from \"../components\";\n\ninterface HotkeysDialogProps extends DialogProps {\n    /**\n     * This string displayed as the group name in the hotkeys dialog for all\n     * global hotkeys.\n     */\n    globalHotkeysGroup?: string;\n}\n\n/**\n * The delay before showing or hiding the dialog. Should be long enough to\n * allow all registered hotkey listeners to execute first.\n */\nconst DELAY_IN_MS = 10;\n\n/** @deprecated use HotkeysDialog2 */\nclass HotkeysDialogLegacy {\n    public componentProps = {\n        globalHotkeysGroup: \"Global hotkeys\",\n    } as any as HotkeysDialogProps;\n\n    private container: HTMLElement | null = null;\n\n    private hotkeysQueue = [] as HotkeyProps[][];\n\n    private isDialogShowing = false;\n\n    private showTimeoutToken?: number;\n\n    private hideTimeoutToken?: number;\n\n    public render() {\n        if (this.container == null) {\n            this.container = this.getContainer();\n        }\n        ReactDOM.render(this.renderComponent(), this.container);\n    }\n\n    public unmount() {\n        if (this.container != null) {\n            ReactDOM.unmountComponentAtNode(this.container);\n            this.container.remove();\n            this.container = null;\n        }\n    }\n\n    /**\n     * Because hotkeys can be registered globally and locally and because\n     * event ordering cannot be guaranteed, we use this debouncing method to\n     * allow all hotkey listeners to fire and add their hotkeys to the dialog.\n     *\n     * 10msec after the last listener adds their hotkeys, we render the dialog\n     * and clear the queue.\n     */\n    public enqueueHotkeysForDisplay(hotkeys: HotkeyProps[]) {\n        this.hotkeysQueue.push(hotkeys);\n\n        // reset timeout for debounce\n        window.clearTimeout(this.showTimeoutToken);\n        this.showTimeoutToken = window.setTimeout(this.show, DELAY_IN_MS);\n    }\n\n    public hideAfterDelay() {\n        window.clearTimeout(this.hideTimeoutToken);\n        this.hideTimeoutToken = window.setTimeout(this.hide, DELAY_IN_MS);\n    }\n\n    public show = () => {\n        this.isDialogShowing = true;\n        this.render();\n    };\n\n    public hide = () => {\n        this.isDialogShowing = false;\n        this.render();\n    };\n\n    public isShowing() {\n        return this.isDialogShowing;\n    }\n\n    private getContainer() {\n        if (this.container == null) {\n            this.container = document.createElement(\"div\");\n            this.container.classList.add(Classes.PORTAL);\n            document.body.appendChild(this.container);\n        }\n        return this.container;\n    }\n\n    private renderComponent() {\n        return (\n            <Dialog\n                {...this.componentProps}\n                className={classNames(Classes.HOTKEY_DIALOG, this.componentProps.className)}\n                isOpen={this.isDialogShowing}\n                onClose={this.hide}\n            >\n                <div className={Classes.DIALOG_BODY}>{this.renderHotkeys()}</div>\n            </Dialog>\n        );\n    }\n\n    private renderHotkeys() {\n        const hotkeys = this.emptyHotkeyQueue();\n        const elements = hotkeys.map((hotkey, index) => {\n            const group =\n                hotkey.global === true && hotkey.group == null ? this.componentProps.globalHotkeysGroup : hotkey.group;\n\n            return <Hotkey key={index} {...hotkey} group={group} />;\n        });\n\n        return <Hotkeys>{elements}</Hotkeys>;\n    }\n\n    private emptyHotkeyQueue() {\n        // flatten then empty the hotkeys queue\n        const hotkeys = this.hotkeysQueue.reduce((arr, queued) => arr.concat(queued), []);\n        this.hotkeysQueue.length = 0;\n        return hotkeys;\n    }\n}\n\n// singleton instance\nconst HOTKEYS_DIALOG = new HotkeysDialogLegacy();\n\n/** @deprecated use HotkeysProvider */\nexport function isHotkeysDialogShowing() {\n    return HOTKEYS_DIALOG.isShowing();\n}\n\n/** @deprecated use HotkeysProvider */\nexport function setHotkeysDialogProps(props: Partial<HotkeysDialogProps>) {\n    for (const key in props) {\n        if (props.hasOwnProperty(key)) {\n            (HOTKEYS_DIALOG.componentProps as any)[key] = (props as any)[key];\n        }\n    }\n}\n\n/** @deprecated use HotkeysProvider */\nexport function showHotkeysDialog(hotkeys: HotkeyProps[]) {\n    HOTKEYS_DIALOG.enqueueHotkeysForDisplay(hotkeys);\n}\n\n/** @deprecated use HotkeysProvider */\nexport function hideHotkeysDialog() {\n    HOTKEYS_DIALOG.hide();\n}\n\n/**\n * Use this function instead of `hideHotkeysDialog` if you need to ensure that all hotkey listeners\n * have time to execute with the dialog in a consistent open state. This can avoid flickering the\n * dialog between open and closedÂ states as successive listeners fire.\n *\n * @deprecated use HotkeysProvider\n */\nexport function hideHotkeysDialogAfterDelay() {\n    HOTKEYS_DIALOG.hideAfterDelay();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}