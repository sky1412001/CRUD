{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign } from \"tslib\";\nimport * as React from \"react\";\nimport { Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { getBasePlacement } from \"./popperUtils\";\n// these paths come from the Core Kit Sketch file\n// https://github.com/palantir/blueprint/blob/develop/resources/sketch/Core%20Kit.sketch\nvar SVG_SHADOW_PATH = \"M8.11 6.302c1.015-.936 1.887-2.922 1.887-4.297v26c0-1.378\" + \"-.868-3.357-1.888-4.297L.925 17.09c-1.237-1.14-1.233-3.034 0-4.17L8.11 6.302z\";\nvar SVG_ARROW_PATH = \"M8.787 7.036c1.22-1.125 2.21-3.376 2.21-5.03V0v30-2.005\" + \"c0-1.654-.983-3.9-2.21-5.03l-7.183-6.616c-.81-.746-.802-1.96 0-2.7l7.183-6.614z\";\n// additional space between arrow and edge of target\nvar ARROW_SPACING = 4;\nexport var POPOVER_ARROW_SVG_SIZE = 30;\nexport var TOOLTIP_ARROW_SVG_SIZE = 22;\n/* istanbul ignore next */\n/** Modifier helper function to compute arrow rotate() transform */\nfunction getArrowAngle(placement) {\n  if (placement == null) {\n    return 0;\n  }\n  // can only be top/left/bottom/right - auto is resolved internally\n  switch (getBasePlacement(placement)) {\n    case \"top\":\n      return -90;\n    case \"left\":\n      return 180;\n    case \"bottom\":\n      return 90;\n    default:\n      return 0;\n  }\n}\n/* istanbul ignore next */\n/**\n * Popper's builtin \"arrow\" modifier options.padding doesn't seem to work for us, so we\n * need to compute our own offset in the direction of the popover relative to the reference.\n */\nfunction getArrowReferenceOffsetStyle(placement) {\n  var offset = POPOVER_ARROW_SVG_SIZE / 2 - ARROW_SPACING;\n  switch (getBasePlacement(placement)) {\n    case \"top\":\n      return {\n        bottom: -offset\n      };\n    case \"left\":\n      return {\n        right: -offset\n      };\n    case \"bottom\":\n      return {\n        top: -offset\n      };\n    default:\n      return {\n        left: -offset\n      };\n  }\n}\nexport var PopoverArrow = function (_a) {\n  var _b = _a.arrowProps,\n    ref = _b.ref,\n    style = _b.style,\n    placement = _a.placement;\n  return (\n    // data attribute allows popper.js to position the arrow\n    React.createElement(\"div\", {\n      \"aria-hidden\": true,\n      className: Classes.POPOVER_ARROW,\n      \"data-popper-arrow\": true,\n      ref: ref,\n      style: __assign(__assign({}, style), getArrowReferenceOffsetStyle(placement))\n    }, React.createElement(\"svg\", {\n      viewBox: \"0 0 \".concat(POPOVER_ARROW_SVG_SIZE, \" \").concat(POPOVER_ARROW_SVG_SIZE),\n      style: {\n        transform: \"rotate(\".concat(getArrowAngle(placement), \"deg)\")\n      }\n    }, React.createElement(\"path\", {\n      className: Classes.POPOVER_ARROW + \"-border\",\n      d: SVG_SHADOW_PATH\n    }), React.createElement(\"path\", {\n      className: Classes.POPOVER_ARROW + \"-fill\",\n      d: SVG_ARROW_PATH\n    })))\n  );\n};\nPopoverArrow.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".PopoverArrow\");","map":{"version":3,"names":["React","Classes","DISPLAYNAME_PREFIX","getBasePlacement","SVG_SHADOW_PATH","SVG_ARROW_PATH","ARROW_SPACING","POPOVER_ARROW_SVG_SIZE","TOOLTIP_ARROW_SVG_SIZE","getArrowAngle","placement","getArrowReferenceOffsetStyle","offset","bottom","right","top","left","PopoverArrow","_a","_b","arrowProps","ref","style","createElement","className","POPOVER_ARROW","__assign","viewBox","concat","transform","d","displayName"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/components/popover/popoverArrow.tsx"],"sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Placement } from \"@popperjs/core\";\nimport * as React from \"react\";\nimport { PopperArrowProps } from \"react-popper\";\n\nimport { Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { getBasePlacement } from \"./popperUtils\";\n\n// these paths come from the Core Kit Sketch file\n// https://github.com/palantir/blueprint/blob/develop/resources/sketch/Core%20Kit.sketch\nconst SVG_SHADOW_PATH =\n    \"M8.11 6.302c1.015-.936 1.887-2.922 1.887-4.297v26c0-1.378\" +\n    \"-.868-3.357-1.888-4.297L.925 17.09c-1.237-1.14-1.233-3.034 0-4.17L8.11 6.302z\";\nconst SVG_ARROW_PATH =\n    \"M8.787 7.036c1.22-1.125 2.21-3.376 2.21-5.03V0v30-2.005\" +\n    \"c0-1.654-.983-3.9-2.21-5.03l-7.183-6.616c-.81-.746-.802-1.96 0-2.7l7.183-6.614z\";\n\n// additional space between arrow and edge of target\nconst ARROW_SPACING = 4;\nexport const POPOVER_ARROW_SVG_SIZE = 30;\nexport const TOOLTIP_ARROW_SVG_SIZE = 22;\n\n/* istanbul ignore next */\n/** Modifier helper function to compute arrow rotate() transform */\nfunction getArrowAngle(placement?: Placement) {\n    if (placement == null) {\n        return 0;\n    }\n    // can only be top/left/bottom/right - auto is resolved internally\n    switch (getBasePlacement(placement)) {\n        case \"top\":\n            return -90;\n        case \"left\":\n            return 180;\n        case \"bottom\":\n            return 90;\n        default:\n            return 0;\n    }\n}\n\n/* istanbul ignore next */\n/**\n * Popper's builtin \"arrow\" modifier options.padding doesn't seem to work for us, so we\n * need to compute our own offset in the direction of the popover relative to the reference.\n */\nfunction getArrowReferenceOffsetStyle(placement: Placement) {\n    const offset = POPOVER_ARROW_SVG_SIZE / 2 - ARROW_SPACING;\n    switch (getBasePlacement(placement)) {\n        case \"top\":\n            return { bottom: -offset };\n        case \"left\":\n            return { right: -offset };\n        case \"bottom\":\n            return { top: -offset };\n        default:\n            return { left: -offset };\n    }\n}\n\nexport interface PopoverArrowProps {\n    arrowProps: PopperArrowProps;\n    placement: Placement;\n}\n\nexport const PopoverArrow: React.FC<PopoverArrowProps> = ({ arrowProps: { ref, style }, placement }) => (\n    // data attribute allows popper.js to position the arrow\n    <div\n        aria-hidden={true}\n        className={Classes.POPOVER_ARROW}\n        data-popper-arrow={true}\n        ref={ref}\n        style={{\n            ...style,\n            ...getArrowReferenceOffsetStyle(placement),\n        }}\n    >\n        <svg\n            viewBox={`0 0 ${POPOVER_ARROW_SVG_SIZE} ${POPOVER_ARROW_SVG_SIZE}`}\n            style={{ transform: `rotate(${getArrowAngle(placement)}deg)` }}\n        >\n            <path className={Classes.POPOVER_ARROW + \"-border\"} d={SVG_SHADOW_PATH} />\n            <path className={Classes.POPOVER_ARROW + \"-fill\"} d={SVG_ARROW_PATH} />\n        </svg>\n    </div>\n);\nPopoverArrow.displayName = `${DISPLAYNAME_PREFIX}.PopoverArrow`;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAG9B,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,cAAc;AAC1D,SAASC,gBAAgB,QAAQ,eAAe;AAEhD;AACA;AACA,IAAMC,eAAe,GACjB,2DAA2D,GAC3D,+EAA+E;AACnF,IAAMC,cAAc,GAChB,yDAAyD,GACzD,iFAAiF;AAErF;AACA,IAAMC,aAAa,GAAG,CAAC;AACvB,OAAO,IAAMC,sBAAsB,GAAG,EAAE;AACxC,OAAO,IAAMC,sBAAsB,GAAG,EAAE;AAExC;AACA;AACA,SAASC,aAAaA,CAACC,SAAqB;EACxC,IAAIA,SAAS,IAAI,IAAI,EAAE;IACnB,OAAO,CAAC;;EAEZ;EACA,QAAQP,gBAAgB,CAACO,SAAS,CAAC;IAC/B,KAAK,KAAK;MACN,OAAO,CAAC,EAAE;IACd,KAAK,MAAM;MACP,OAAO,GAAG;IACd,KAAK,QAAQ;MACT,OAAO,EAAE;IACb;MACI,OAAO,CAAC;;AAEpB;AAEA;AACA;;;;AAIA,SAASC,4BAA4BA,CAACD,SAAoB;EACtD,IAAME,MAAM,GAAGL,sBAAsB,GAAG,CAAC,GAAGD,aAAa;EACzD,QAAQH,gBAAgB,CAACO,SAAS,CAAC;IAC/B,KAAK,KAAK;MACN,OAAO;QAAEG,MAAM,EAAE,CAACD;MAAM,CAAE;IAC9B,KAAK,MAAM;MACP,OAAO;QAAEE,KAAK,EAAE,CAACF;MAAM,CAAE;IAC7B,KAAK,QAAQ;MACT,OAAO;QAAEG,GAAG,EAAE,CAACH;MAAM,CAAE;IAC3B;MACI,OAAO;QAAEI,IAAI,EAAE,CAACJ;MAAM,CAAE;;AAEpC;AAOA,OAAO,IAAMK,YAAY,GAAgC,SAAAA,CAACC,EAAyC;MAAvCC,EAAA,GAAAD,EAAA,CAAAE,UAA0B;IAAZC,GAAG,GAAAF,EAAA,CAAAE,GAAA;IAAEC,KAAK,GAAAH,EAAA,CAAAG,KAAA;IAAIZ,SAAS,GAAAQ,EAAA,CAAAR,SAAA;EAAO;IACpG;IACAV,KAAA,CAAAuB,aAAA;MAAA,eACiB,IAAI;MACjBC,SAAS,EAAEvB,OAAO,CAACwB,aAAa;MAAA,qBACb,IAAI;MACvBJ,GAAG,EAAEA,GAAG;MACRC,KAAK,EAAAI,QAAA,CAAAA,QAAA,KACEJ,KAAK,GACLX,4BAA4B,CAACD,SAAS,CAAC;IAAA,GAG9CV,KAAA,CAAAuB,aAAA;MACII,OAAO,EAAE,OAAAC,MAAA,CAAOrB,sBAAsB,OAAAqB,MAAA,CAAIrB,sBAAsB,CAAE;MAClEe,KAAK,EAAE;QAAEO,SAAS,EAAE,UAAAD,MAAA,CAAUnB,aAAa,CAACC,SAAS,CAAC;MAAM;IAAE,GAE9DV,KAAA,CAAAuB,aAAA;MAAMC,SAAS,EAAEvB,OAAO,CAACwB,aAAa,GAAG,SAAS;MAAEK,CAAC,EAAE1B;IAAe,EAAI,EAC1EJ,KAAA,CAAAuB,aAAA;MAAMC,SAAS,EAAEvB,OAAO,CAACwB,aAAa,GAAG,OAAO;MAAEK,CAAC,EAAEzB;IAAc,EAAI,CACrE;EACJ;AAnB8F,CAoBvG;AACDY,YAAY,CAACc,WAAW,GAAG,GAAAH,MAAA,CAAG1B,kBAAkB,kBAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}