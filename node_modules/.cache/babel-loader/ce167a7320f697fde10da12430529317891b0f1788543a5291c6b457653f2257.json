{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nvar NS = Classes.getClassNamespace();\n// this is a simple component, unit tests would be mostly tautological\n/* istanbul ignore next */\n/**\n * File input component.\n *\n * @see https://blueprintjs.com/docs/#core/components/file-input\n */\nvar FileInput = /** @class */function (_super) {\n  __extends(FileInput, _super);\n  function FileInput() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.handleInputChange = function (e) {\n      var _a, _b, _c, _d;\n      (_b = (_a = _this.props).onInputChange) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n      (_d = (_c = _this.props.inputProps) === null || _c === void 0 ? void 0 : _c.onChange) === null || _d === void 0 ? void 0 : _d.call(_c, e);\n    };\n    return _this;\n  }\n  FileInput.prototype.render = function () {\n    var _a, _b, _c;\n    var _d = this.props,\n      buttonText = _d.buttonText,\n      className = _d.className,\n      disabled = _d.disabled,\n      fill = _d.fill,\n      hasSelection = _d.hasSelection,\n      inputProps = _d.inputProps,\n      large = _d.large,\n      onInputChange = _d.onInputChange,\n      small = _d.small,\n      text = _d.text,\n      htmlProps = __rest(_d, [\"buttonText\", \"className\", \"disabled\", \"fill\", \"hasSelection\", \"inputProps\", \"large\", \"onInputChange\", \"small\", \"text\"]);\n    var rootClasses = classNames(className, Classes.FILE_INPUT, (_a = {}, _a[Classes.FILE_INPUT_HAS_SELECTION] = hasSelection, _a[Classes.DISABLED] = disabled, _a[Classes.FILL] = fill, _a[Classes.LARGE] = large, _a[Classes.SMALL] = small, _a));\n    var uploadProps = (_b = {}, _b[\"\".concat(NS, \"-button-text\")] = buttonText, _b.className = classNames(Classes.FILE_UPLOAD_INPUT, (_c = {}, _c[Classes.FILE_UPLOAD_INPUT_CUSTOM_TEXT] = !!buttonText, _c)), _b);\n    return React.createElement(\"label\", __assign({}, htmlProps, {\n      className: rootClasses\n    }), React.createElement(\"input\", __assign({}, inputProps, {\n      onChange: this.handleInputChange,\n      type: \"file\",\n      disabled: disabled\n    })), React.createElement(\"span\", __assign({}, uploadProps), text));\n  };\n  FileInput.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".FileInput\");\n  FileInput.defaultProps = {\n    hasSelection: false,\n    inputProps: {},\n    text: \"Choose file...\"\n  };\n  return FileInput;\n}(AbstractPureComponent);\nexport { FileInput };","map":{"version":3,"names":["classNames","React","AbstractPureComponent","Classes","DISPLAYNAME_PREFIX","NS","getClassNamespace","FileInput","_super","__extends","_this","apply","arguments","handleInputChange","e","_b","_a","props","onInputChange","call","_d","_c","inputProps","onChange","prototype","render","buttonText","className","disabled","fill","hasSelection","large","small","text","htmlProps","__rest","rootClasses","FILE_INPUT","FILE_INPUT_HAS_SELECTION","DISABLED","FILL","LARGE","SMALL","uploadProps","concat","FILE_UPLOAD_INPUT","FILE_UPLOAD_INPUT_CUSTOM_TEXT","createElement","__assign","type","displayName","defaultProps"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/components/forms/fileInput.tsx"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, Props } from \"../../common/props\";\n\nexport interface FileInputProps extends React.LabelHTMLAttributes<HTMLLabelElement>, Props {\n    /**\n     * Whether the file input is non-interactive.\n     * Setting this to `true` will automatically disable the child input too.\n     */\n    disabled?: boolean;\n\n    /**\n     * Whether the file input should take up the full width of its container.\n     */\n    fill?: boolean;\n\n    /**\n     * Whether the user has made a selection in the input. This will affect the component's\n     * text styling. Make sure to set a non-empty value for the text prop as well.\n     *\n     * @default false\n     */\n    hasSelection?: boolean;\n\n    /**\n     * The props to pass to the child input.\n     * `disabled` will be ignored in favor of the top-level prop.\n     * `type` will be ignored, because the input _must_ be `type=\"file\"`.\n     * Pass `onChange` here to be notified when the user selects a file.\n     */\n    inputProps?: React.HTMLProps<HTMLInputElement>;\n\n    /**\n     * Whether the file input should appear with large styling.\n     */\n    large?: boolean;\n\n    /**\n     * Callback invoked on `<input>` `change` events.\n     *\n     * This callback is offered as a convenience; it is equivalent to `inputProps.onChange`.\n     *\n     * __Note:__ The top-level `onChange` prop is passed to the `<label>` element rather than the `<input>`,\n     * which may not be what you expect.\n     */\n    onInputChange?: React.FormEventHandler<HTMLInputElement>;\n\n    /**\n     * Whether the file input should appear with small styling.\n     */\n    small?: boolean;\n\n    /**\n     * The text to display inside the input.\n     *\n     * @default \"Choose file...\"\n     */\n    text?: React.ReactNode;\n\n    /**\n     * The button text to display on the right side of the input.\n     *\n     * @default \"Browse\"\n     */\n    buttonText?: string;\n}\n\nconst NS = Classes.getClassNamespace();\n\n// this is a simple component, unit tests would be mostly tautological\n/* istanbul ignore next */\n/**\n * File input component.\n *\n * @see https://blueprintjs.com/docs/#core/components/file-input\n */\nexport class FileInput extends AbstractPureComponent<FileInputProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.FileInput`;\n\n    public static defaultProps: FileInputProps = {\n        hasSelection: false,\n        inputProps: {},\n        text: \"Choose file...\",\n    };\n\n    public render() {\n        const {\n            buttonText,\n            className,\n            disabled,\n            fill,\n            hasSelection,\n            inputProps,\n            large,\n            onInputChange,\n            small,\n            text,\n            ...htmlProps\n        } = this.props;\n\n        const rootClasses = classNames(className, Classes.FILE_INPUT, {\n            [Classes.FILE_INPUT_HAS_SELECTION]: hasSelection,\n            [Classes.DISABLED]: disabled,\n            [Classes.FILL]: fill,\n            [Classes.LARGE]: large,\n            [Classes.SMALL]: small,\n        });\n\n        const uploadProps = {\n            [`${NS}-button-text`]: buttonText,\n            className: classNames(Classes.FILE_UPLOAD_INPUT, {\n                [Classes.FILE_UPLOAD_INPUT_CUSTOM_TEXT]: !!buttonText,\n            }),\n        };\n\n        return (\n            <label {...htmlProps} className={rootClasses}>\n                <input {...inputProps} onChange={this.handleInputChange} type=\"file\" disabled={disabled} />\n                <span {...uploadProps}>{text}</span>\n            </label>\n        );\n    }\n\n    private handleInputChange = (e: React.FormEvent<HTMLInputElement>) => {\n        this.props.onInputChange?.(e);\n        this.props.inputProps?.onChange?.(e);\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}