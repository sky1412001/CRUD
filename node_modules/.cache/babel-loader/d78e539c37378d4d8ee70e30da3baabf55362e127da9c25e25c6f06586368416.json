{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n// this component is simple enough that tests would be purely tautological.\n/* istanbul ignore next */\n/**\n * Button group component.\n *\n * @see https://blueprintjs.com/docs/#core/components/button-group\n */\nexport var ButtonGroup = React.forwardRef(function (props, ref) {\n  var _a;\n  var alignText = props.alignText,\n    className = props.className,\n    fill = props.fill,\n    minimal = props.minimal,\n    large = props.large,\n    vertical = props.vertical,\n    htmlProps = __rest(props, [\"alignText\", \"className\", \"fill\", \"minimal\", \"large\", \"vertical\"]);\n  var buttonGroupClasses = classNames(Classes.BUTTON_GROUP, (_a = {}, _a[Classes.FILL] = fill, _a[Classes.LARGE] = large, _a[Classes.MINIMAL] = minimal, _a[Classes.VERTICAL] = vertical, _a), Classes.alignmentClass(alignText), className);\n  return React.createElement(\"div\", __assign({}, htmlProps, {\n    ref: ref,\n    className: buttonGroupClasses\n  }), props.children);\n});\nButtonGroup.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".ButtonGroup\");","map":{"version":3,"names":["classNames","React","Classes","DISPLAYNAME_PREFIX","ButtonGroup","forwardRef","props","ref","alignText","className","fill","minimal","large","vertical","htmlProps","__rest","buttonGroupClasses","BUTTON_GROUP","_a","FILL","LARGE","MINIMAL","VERTICAL","alignmentClass","createElement","__assign","children","displayName","concat"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/components/button/buttonGroup.tsx"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { Alignment, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, HTMLDivProps, Props } from \"../../common/props\";\n\nexport interface ButtonGroupProps extends Props, HTMLDivProps, React.RefAttributes<HTMLDivElement> {\n    /**\n     * Text alignment within button. By default, icons and text will be centered\n     * within the button. Passing `\"left\"` or `\"right\"` will align the button\n     * text to that side and push `icon` and `rightIcon` to either edge. Passing\n     * `\"center\"` will center the text and icons together.\n     */\n    alignText?: Alignment;\n\n    /** Buttons in this group. */\n    children: React.ReactNode;\n\n    /**\n     * Whether the button group should take up the full width of its container.\n     *\n     * @default false\n     */\n    fill?: boolean;\n\n    /**\n     * Whether the child buttons should appear with minimal styling.\n     *\n     * @default false\n     */\n    minimal?: boolean;\n\n    /**\n     * Whether the child buttons should appear with large styling.\n     *\n     * @default false\n     */\n    large?: boolean;\n\n    /**\n     * Whether the button group should appear with vertical styling.\n     *\n     * @default false\n     */\n    vertical?: boolean;\n}\n\n// this component is simple enough that tests would be purely tautological.\n/* istanbul ignore next */\n/**\n * Button group component.\n *\n * @see https://blueprintjs.com/docs/#core/components/button-group\n */\nexport const ButtonGroup: React.FC<ButtonGroupProps> = React.forwardRef<HTMLDivElement, ButtonGroupProps>(\n    (props, ref) => {\n        const { alignText, className, fill, minimal, large, vertical, ...htmlProps } = props;\n        const buttonGroupClasses = classNames(\n            Classes.BUTTON_GROUP,\n            {\n                [Classes.FILL]: fill,\n                [Classes.LARGE]: large,\n                [Classes.MINIMAL]: minimal,\n                [Classes.VERTICAL]: vertical,\n            },\n            Classes.alignmentClass(alignText),\n            className,\n        );\n        return (\n            <div {...htmlProps} ref={ref} className={buttonGroupClasses}>\n                {props.children}\n            </div>\n        );\n    },\n);\nButtonGroup.displayName = `${DISPLAYNAME_PREFIX}.ButtonGroup`;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAAoBC,OAAO,QAAQ,cAAc;AACjD,SAASC,kBAAkB,QAA6B,oBAAoB;AA2C5E;AACA;AACA;;;;;AAKA,OAAO,IAAMC,WAAW,GAA+BH,KAAK,CAACI,UAAU,CACnE,UAACC,KAAK,EAAEC,GAAG;;EACC,IAAAC,SAAS,GAA8DF,KAAK,CAAAE,SAAnE;IAAEC,SAAS,GAAmDH,KAAK,CAAAG,SAAxD;IAAEC,IAAI,GAA6CJ,KAAK,CAAAI,IAAlD;IAAEC,OAAO,GAAoCL,KAAK,CAAAK,OAAzC;IAAEC,KAAK,GAA6BN,KAAK,CAAAM,KAAlC;IAAEC,QAAQ,GAAmBP,KAAK,CAAAO,QAAxB;IAAKC,SAAS,GAAAC,MAAA,CAAKT,KAAK,EAA9E,kEAAsE,CAAF;EAC1E,IAAMU,kBAAkB,GAAGhB,UAAU,CACjCE,OAAO,CAACe,YAAY,GAAAC,EAAA,OAEhBA,EAAA,CAAChB,OAAO,CAACiB,IAAI,IAAGT,IAAI,EACpBQ,EAAA,CAAChB,OAAO,CAACkB,KAAK,IAAGR,KAAK,EACtBM,EAAA,CAAChB,OAAO,CAACmB,OAAO,IAAGV,OAAO,EAC1BO,EAAA,CAAChB,OAAO,CAACoB,QAAQ,IAAGT,QAAQ,E,KAEhCX,OAAO,CAACqB,cAAc,CAACf,SAAS,CAAC,EACjCC,SAAS,CACZ;EACD,OACIR,KAAA,CAAAuB,aAAA,QAAAC,QAAA,KAASX,SAAS;IAAEP,GAAG,EAAEA,GAAG;IAAEE,SAAS,EAAEO;EAAkB,IACtDV,KAAK,CAACoB,QAAQ,CACb;AAEd,CAAC,CACJ;AACDtB,WAAW,CAACuB,WAAW,GAAG,GAAAC,MAAA,CAAGzB,kBAAkB,iBAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}