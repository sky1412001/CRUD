{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Error, InfoSign, Tick, WarningSign } from \"@blueprintjs/icons\";\nimport { AbstractPureComponent, Classes, DISPLAYNAME_PREFIX, Intent, Utils } from \"../../common\";\nimport { H5 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\n/**\n * Callout component.\n *\n * @see https://blueprintjs.com/docs/#core/components/callout\n */\nvar Callout = /** @class */function (_super) {\n  __extends(Callout, _super);\n  function Callout() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Callout.prototype.render = function () {\n    var _a;\n    var _b = this.props,\n      className = _b.className,\n      children = _b.children,\n      icon = _b.icon,\n      intent = _b.intent,\n      title = _b.title,\n      htmlProps = __rest(_b, [\"className\", \"children\", \"icon\", \"intent\", \"title\"]);\n    var iconElement = this.renderIcon(icon, intent);\n    var classes = classNames(Classes.CALLOUT, Classes.intentClass(intent), className, (_a = {}, _a[Classes.CALLOUT_HAS_BODY_CONTENT] = !Utils.isReactNodeEmpty(children), _a[Classes.CALLOUT_ICON] = iconElement != null, _a));\n    return React.createElement(\"div\", __assign({\n      className: classes\n    }, htmlProps), iconElement, title && React.createElement(H5, null, title), children);\n  };\n  Callout.prototype.renderIcon = function (icon, intent) {\n    // 1. no icon\n    if (icon === null || icon === false) {\n      return undefined;\n    }\n    var iconProps = {\n      \"aria-hidden\": true,\n      tabIndex: -1\n    };\n    // 2. icon specified by name or as a custom SVG element\n    if (icon !== undefined) {\n      return React.createElement(Icon, __assign({\n        icon: icon\n      }, iconProps));\n    }\n    // 3. icon specified by intent prop\n    switch (intent) {\n      case Intent.DANGER:\n        return React.createElement(Error, __assign({}, iconProps));\n      case Intent.PRIMARY:\n        return React.createElement(InfoSign, __assign({}, iconProps));\n      case Intent.WARNING:\n        return React.createElement(WarningSign, __assign({}, iconProps));\n      case Intent.SUCCESS:\n        return React.createElement(Tick, __assign({}, iconProps));\n      default:\n        return undefined;\n    }\n  };\n  Callout.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Callout\");\n  return Callout;\n}(AbstractPureComponent);\nexport { Callout };","map":{"version":3,"names":["classNames","React","Error","InfoSign","Tick","WarningSign","AbstractPureComponent","Classes","DISPLAYNAME_PREFIX","Intent","Utils","H5","Icon","Callout","_super","__extends","prototype","render","_b","props","className","children","icon","intent","title","htmlProps","__rest","iconElement","renderIcon","classes","CALLOUT","intentClass","_a","CALLOUT_HAS_BODY_CONTENT","isReactNodeEmpty","CALLOUT_ICON","createElement","__assign","undefined","iconProps","tabIndex","DANGER","PRIMARY","WARNING","SUCCESS","displayName","concat"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/components/callout/callout.tsx"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { Error, IconName, InfoSign, Tick, WarningSign } from \"@blueprintjs/icons\";\n\nimport {\n    AbstractPureComponent,\n    Classes,\n    DISPLAYNAME_PREFIX,\n    HTMLDivProps,\n    Intent,\n    IntentProps,\n    MaybeElement,\n    Props,\n    Utils,\n} from \"../../common\";\nimport { H5 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\n\n/** This component also supports the full range of HTML `<div>` attributes. */\nexport interface CalloutProps extends IntentProps, Props, HTMLDivProps {\n    /** Callout contents. */\n    children?: React.ReactNode;\n\n    /**\n     * Name of a Blueprint UI icon (or an icon element) to render on the left side.\n     *\n     * If this prop is omitted or `undefined`, the `intent` prop will determine a default icon.\n     * If this prop is explicitly `null`, no icon will be displayed (regardless of `intent`).\n     */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Visual intent color to apply to background, title, and icon.\n     *\n     * Defining this prop also applies a default icon, if the `icon` prop is omitted.\n     */\n    intent?: Intent;\n\n    /**\n     * String content of optional title element.\n     *\n     * Due to a conflict with the HTML prop types, to provide JSX content simply\n     * pass `<H4>JSX title content</H4>` as first `children` element instead of\n     * using this prop (note uppercase tag name to use the Blueprint Heading\n     * component).\n     */\n    title?: string;\n}\n\n/**\n * Callout component.\n *\n * @see https://blueprintjs.com/docs/#core/components/callout\n */\nexport class Callout extends AbstractPureComponent<CalloutProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Callout`;\n\n    public render() {\n        const { className, children, icon, intent, title, ...htmlProps } = this.props;\n        const iconElement = this.renderIcon(icon, intent);\n        const classes = classNames(Classes.CALLOUT, Classes.intentClass(intent), className, {\n            [Classes.CALLOUT_HAS_BODY_CONTENT]: !Utils.isReactNodeEmpty(children),\n            [Classes.CALLOUT_ICON]: iconElement != null,\n        });\n\n        return (\n            <div className={classes} {...htmlProps}>\n                {iconElement}\n                {title && <H5>{title}</H5>}\n                {children}\n            </div>\n        );\n    }\n\n    private renderIcon(icon?: CalloutProps[\"icon\"], intent?: Intent): IconName | MaybeElement {\n        // 1. no icon\n        if (icon === null || icon === false) {\n            return undefined;\n        }\n\n        const iconProps = { \"aria-hidden\": true, tabIndex: -1 };\n\n        // 2. icon specified by name or as a custom SVG element\n        if (icon !== undefined) {\n            return <Icon icon={icon} {...iconProps} />;\n        }\n\n        // 3. icon specified by intent prop\n        switch (intent) {\n            case Intent.DANGER:\n                return <Error {...iconProps} />;\n            case Intent.PRIMARY:\n                return <InfoSign {...iconProps} />;\n            case Intent.WARNING:\n                return <WarningSign {...iconProps} />;\n            case Intent.SUCCESS:\n                return <Tick {...iconProps} />;\n            default:\n                return undefined;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}