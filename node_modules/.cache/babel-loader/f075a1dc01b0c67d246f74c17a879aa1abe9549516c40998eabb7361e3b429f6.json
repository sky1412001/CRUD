{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { clamp } from \"../../common/utils\";\n/**\n * Progress bar component.\n *\n * @see https://blueprintjs.com/docs/#core/components/progress-bar\n */\nvar ProgressBar = /** @class */function (_super) {\n  __extends(ProgressBar, _super);\n  function ProgressBar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ProgressBar.prototype.render = function () {\n    var _a;\n    var _b = this.props,\n      _c = _b.animate,\n      animate = _c === void 0 ? true : _c,\n      className = _b.className,\n      intent = _b.intent,\n      _d = _b.stripes,\n      stripes = _d === void 0 ? true : _d,\n      value = _b.value;\n    var classes = classNames(Classes.PROGRESS_BAR, Classes.intentClass(intent), (_a = {}, _a[Classes.PROGRESS_NO_ANIMATION] = !animate, _a[Classes.PROGRESS_NO_STRIPES] = !stripes, _a), className);\n    var percent = value == null ? undefined : 100 * clamp(value, 0, 1);\n    // don't set width if value is null (rely on default CSS value)\n    var width = percent == null ? undefined : percent + \"%\";\n    return React.createElement(\"div\", {\n      \"aria-valuemax\": 100,\n      \"aria-valuemin\": 0,\n      \"aria-valuenow\": percent == null ? undefined : Math.round(percent),\n      className: classes,\n      role: \"progressbar\"\n    }, React.createElement(\"div\", {\n      className: Classes.PROGRESS_METER,\n      style: {\n        width: width\n      }\n    }));\n  };\n  ProgressBar.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".ProgressBar\");\n  return ProgressBar;\n}(AbstractPureComponent);\nexport { ProgressBar };","map":{"version":3,"names":["classNames","React","AbstractPureComponent","Classes","DISPLAYNAME_PREFIX","clamp","ProgressBar","_super","__extends","prototype","render","_b","props","_c","animate","className","intent","_d","stripes","value","classes","PROGRESS_BAR","intentClass","_a","PROGRESS_NO_ANIMATION","PROGRESS_NO_STRIPES","percent","undefined","width","createElement","Math","round","role","PROGRESS_METER","style","displayName","concat"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/components/progress-bar/progressBar.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, IntentProps, Props } from \"../../common/props\";\nimport { clamp } from \"../../common/utils\";\n\nexport interface ProgressBarProps extends Props, IntentProps {\n    /**\n     * Whether the background should animate.\n     *\n     * @default true\n     */\n    animate?: boolean;\n\n    /**\n     * Whether the background should be striped.\n     *\n     * @default true\n     */\n    stripes?: boolean;\n\n    /**\n     * A value between 0 and 1 (inclusive) representing how far along the operation is.\n     * Values below 0 or above 1 will be interpreted as 0 or 1, respectively.\n     * Omitting this prop will result in an \"indeterminate\" progress meter that fills the entire bar.\n     */\n    value?: number;\n}\n\n/**\n * Progress bar component.\n *\n * @see https://blueprintjs.com/docs/#core/components/progress-bar\n */\nexport class ProgressBar extends AbstractPureComponent<ProgressBarProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.ProgressBar`;\n\n    public render() {\n        const { animate = true, className, intent, stripes = true, value } = this.props;\n        const classes = classNames(\n            Classes.PROGRESS_BAR,\n            Classes.intentClass(intent),\n            { [Classes.PROGRESS_NO_ANIMATION]: !animate, [Classes.PROGRESS_NO_STRIPES]: !stripes },\n            className,\n        );\n        const percent = value == null ? undefined : 100 * clamp(value, 0, 1);\n        // don't set width if value is null (rely on default CSS value)\n        const width = percent == null ? undefined : percent + \"%\";\n\n        return (\n            <div\n                aria-valuemax={100}\n                aria-valuemin={0}\n                aria-valuenow={percent == null ? undefined : Math.round(percent)}\n                className={classes}\n                role=\"progressbar\"\n            >\n                <div className={Classes.PROGRESS_METER} style={{ width }} />\n            </div>\n        );\n    }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,qBAAqB,EAAEC,OAAO,QAAQ,cAAc;AAC7D,SAASC,kBAAkB,QAA4B,oBAAoB;AAC3E,SAASC,KAAK,QAAQ,oBAAoB;AAyB1C;;;;;AAKA,IAAAC,WAAA,0BAAAC,MAAA;EAAiCC,SAAA,CAAAF,WAAA,EAAAC,MAAA;EAAjC,SAAAD,YAAA;;EA2BA;EAxBWA,WAAA,CAAAG,SAAA,CAAAC,MAAM,GAAb;;IACU,IAAAC,EAAA,GAA+D,IAAI,CAACC,KAAK;MAAvEC,EAAA,GAAAF,EAAA,CAAAG,OAAc;MAAdA,OAAO,GAAAD,EAAA,cAAG,IAAI,GAAAA,EAAA;MAAEE,SAAS,GAAAJ,EAAA,CAAAI,SAAA;MAAEC,MAAM,GAAAL,EAAA,CAAAK,MAAA;MAAEC,EAAA,GAAAN,EAAA,CAAAO,OAAc;MAAdA,OAAO,GAAAD,EAAA,cAAG,IAAI,GAAAA,EAAA;MAAEE,KAAK,GAAAR,EAAA,CAAAQ,KAAe;IAC/E,IAAMC,OAAO,GAAGpB,UAAU,CACtBG,OAAO,CAACkB,YAAY,EACpBlB,OAAO,CAACmB,WAAW,CAACN,MAAM,CAAC,GAAAO,EAAA,OACzBA,EAAA,CAACpB,OAAO,CAACqB,qBAAqB,IAAG,CAACV,OAAO,EAAES,EAAA,CAACpB,OAAO,CAACsB,mBAAmB,IAAG,CAACP,OAAO,EAAAK,EAAA,GACpFR,SAAS,CACZ;IACD,IAAMW,OAAO,GAAGP,KAAK,IAAI,IAAI,GAAGQ,SAAS,GAAG,GAAG,GAAGtB,KAAK,CAACc,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IACpE;IACA,IAAMS,KAAK,GAAGF,OAAO,IAAI,IAAI,GAAGC,SAAS,GAAGD,OAAO,GAAG,GAAG;IAEzD,OACIzB,KAAA,CAAA4B,aAAA;MAAA,iBACmB,GAAG;MAAA,iBACH,CAAC;MAAA,iBACDH,OAAO,IAAI,IAAI,GAAGC,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC;MAChEX,SAAS,EAAEK,OAAO;MAClBY,IAAI,EAAC;IAAa,GAElB/B,KAAA,CAAA4B,aAAA;MAAKd,SAAS,EAAEZ,OAAO,CAAC8B,cAAc;MAAEC,KAAK,EAAE;QAAEN,KAAK,EAAAA;MAAA;IAAE,EAAI,CAC1D;EAEd,CAAC;EAzBatB,WAAA,CAAA6B,WAAW,GAAG,GAAAC,MAAA,CAAGhC,kBAAkB,iBAAc;EA0BnE,OAAAE,WAAC;CAAA,CA3BgCJ,qBAAqB;SAAzCI,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}