{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes } from \"../../common\";\nimport { Dialog } from \"../dialog/dialog\";\nimport { DialogBody } from \"../dialog/dialogBody\";\nimport { Hotkey } from \"./hotkey\";\nimport { Hotkeys } from \"./hotkeys\";\nexport var HotkeysDialog2 = function (_a) {\n  var _b = _a.globalGroupName,\n    globalGroupName = _b === void 0 ? \"Global\" : _b,\n    hotkeys = _a.hotkeys,\n    props = __rest(_a, [\"globalGroupName\", \"hotkeys\"]);\n  return React.createElement(Dialog, __assign({}, props, {\n    className: classNames(Classes.HOTKEY_DIALOG, props.className)\n  }), React.createElement(DialogBody, null, React.createElement(Hotkeys, null, hotkeys.map(function (hotkey, index) {\n    return React.createElement(Hotkey, __assign({\n      key: index\n    }, hotkey, {\n      group: hotkey.global === true && hotkey.group == null ? globalGroupName : hotkey.group\n    }));\n  }))));\n};","map":{"version":3,"names":["classNames","React","Classes","Dialog","DialogBody","Hotkey","Hotkeys","HotkeysDialog2","_a","_b","globalGroupName","hotkeys","props","__rest","createElement","__assign","className","HOTKEY_DIALOG","map","hotkey","index","key","group","global"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/components/hotkeys/hotkeysDialog2.tsx"],"sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { Classes } from \"../../common\";\nimport { HotkeyConfig } from \"../../hooks\";\nimport { Dialog, DialogProps } from \"../dialog/dialog\";\nimport { DialogBody } from \"../dialog/dialogBody\";\nimport { Hotkey } from \"./hotkey\";\nimport { Hotkeys } from \"./hotkeys\";\n\nexport interface HotkeysDialogProps extends DialogProps {\n    /**\n     * This string displayed as the group name in the hotkeys dialog for all\n     * global hotkeys.\n     */\n    globalGroupName?: string;\n\n    hotkeys: readonly HotkeyConfig[];\n}\n\nexport const HotkeysDialog2: React.FC<HotkeysDialogProps> = ({ globalGroupName = \"Global\", hotkeys, ...props }) => {\n    return (\n        <Dialog {...props} className={classNames(Classes.HOTKEY_DIALOG, props.className)}>\n            <DialogBody>\n                <Hotkeys>\n                    {hotkeys.map((hotkey, index) => (\n                        <Hotkey\n                            key={index}\n                            {...hotkey}\n                            group={hotkey.global === true && hotkey.group == null ? globalGroupName : hotkey.group}\n                        />\n                    ))}\n                </Hotkeys>\n            </DialogBody>\n        </Dialog>\n    );\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,OAAO,QAAQ,cAAc;AAEtC,SAASC,MAAM,QAAqB,kBAAkB;AACtD,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,OAAO,QAAQ,WAAW;AAYnC,OAAO,IAAMC,cAAc,GAAiC,SAAAA,CAACC,EAAiD;EAA/C,IAAAC,EAAA,GAAAD,EAAA,CAAAE,eAA0B;IAA1BA,eAAe,GAAAD,EAAA,cAAG,QAAQ,GAAAA,EAAA;IAAEE,OAAO,GAAAH,EAAA,CAAAG,OAAA;IAAKC,KAAK,GAAAC,MAAA,CAAAL,EAAA,EAA/C,8BAAiD,CAAF;EACxG,OACIP,KAAA,CAAAa,aAAA,CAACX,MAAM,EAAAY,QAAA,KAAKH,KAAK;IAAEI,SAAS,EAAEhB,UAAU,CAACE,OAAO,CAACe,aAAa,EAAEL,KAAK,CAACI,SAAS;EAAC,IAC5Ef,KAAA,CAAAa,aAAA,CAACV,UAAU,QACPH,KAAA,CAAAa,aAAA,CAACR,OAAO,QACHK,OAAO,CAACO,GAAG,CAAC,UAACC,MAAM,EAAEC,KAAK;IAAK,OAC5BnB,KAAA,CAAAa,aAAA,CAACT,MAAM,EAAAU,QAAA;MACHM,GAAG,EAAED;IAAK,GACND,MAAM;MACVG,KAAK,EAAEH,MAAM,CAACI,MAAM,KAAK,IAAI,IAAIJ,MAAM,CAACG,KAAK,IAAI,IAAI,GAAGZ,eAAe,GAAGS,MAAM,CAACG;IAAK,GACxF;EAL0B,CAM/B,CAAC,CACI,CACD,CACR;AAEjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}