{"ast":null,"code":"/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function getDisplayName(ComponentClass) {\n  return ComponentClass.displayName || ComponentClass.name || \"Unknown\";\n}","map":{"version":3,"names":["getDisplayName","ComponentClass","displayName","name"],"sources":["/home/meander/Desktop/Akash/Workit/my-app/node_modules/@blueprintjs/core/src/legacy/legacyCommon.ts"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents anything that has a `name` property such as Functions.\n */\nexport interface Named {\n    name?: string;\n}\n\n/**\n * Generic interface defining constructor types, such as classes. This is used to type the class\n * itself in meta-programming situations such as decorators.\n */\nexport type Constructor<T> = new (...args: any[]) => T;\n\nexport function getDisplayName(ComponentClass: React.ComponentType | Named) {\n    return (ComponentClass as React.ComponentType).displayName || (ComponentClass as Named).name || \"Unknown\";\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AA6BA,OAAM,SAAUA,cAAcA,CAACC,cAA2C;EACtE,OAAQA,cAAsC,CAACC,WAAW,IAAKD,cAAwB,CAACE,IAAI,IAAI,SAAS;AAC7G"},"metadata":{},"sourceType":"module","externalDependencies":[]}